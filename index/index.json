{"interfaceLanguages":{"swift":[{"children":[{"title":"Basics","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/gettingstarted","title":"Getting Started","type":"article"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/init(loader:)","title":"init(loader: Loader)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/data","title":"var data: NASRData","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> NASR","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Void, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<NASR, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/parsestates(withprogress:)","title":"func parseStates(withProgress: (Progress) -> Void) async throws -> Array<State>","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/parsestatespublisher(errorhandler:withprogress:)","title":"func parseStatesPublisher(errorHandler: ((Error) -> Void)?, withProgress: (Progress) -> Void) -> AnyPublisher<Array<State>, Error>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/progressqueue","title":"static var progressQueue: DispatchQueue","type":"property"}],"path":"\/documentation\/swiftnasr\/nasr","title":"NASR","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasrdata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasrdata\/artccs","title":"var ARTCCs: Array<ARTCC>?","type":"property"},{"path":"\/documentation\/swiftnasr\/nasrdata\/fsses","title":"var FSSes: Array<FSS>?","type":"property"},{"path":"\/documentation\/swiftnasr\/nasrdata\/airports","title":"var airports: Array<Airport>?","type":"property"},{"path":"\/documentation\/swiftnasr\/nasrdata\/cycle","title":"var cycle: Cycle?","type":"property"},{"path":"\/documentation\/swiftnasr\/nasrdata\/navaids","title":"var navaids: Array<Navaid>?","type":"property"},{"path":"\/documentation\/swiftnasr\/nasrdata\/states","title":"var states: Array<State>?","type":"property"}],"path":"\/documentation\/swiftnasr\/nasrdata","title":"NASRData","type":"class"},{"title":"NASR records","type":"groupMarker"},{"children":[{"title":"Records","type":"groupMarker"},{"children":[{"title":"Associations","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/runways","title":"var runways: [Runway]","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/remarks","title":"var remarks: Remarks<Airport.Field>","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/attendanceschedule","title":"var attendanceSchedule: [AttendanceSchedule]","type":"property"},{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/lid","title":"let LID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/icaoidentifier","title":"let ICAOIdentifier: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.property","title":"let facilityType: Airport.FacilityType","type":"property"},{"title":"Demographics","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.property","title":"let FAARegion: Airport.FAARegion?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/faafieldofficecode","title":"let FAAFieldOfficeCode: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/statecode","title":"let stateCode: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/state","title":"var state: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/county","title":"let county: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/countystatecode","title":"let countyStateCode: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/countystate","title":"var countyState: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/city","title":"let city: String","type":"property"},{"title":"Ownership","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.property","title":"let ownership: Airport.Ownership","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/publicuse","title":"let publicUse: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/owner","title":"var owner: Airport.Person?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/manager","title":"var manager: Airport.Person?","type":"property"},{"title":"Geographics","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/referencepoint","title":"let referencePoint: Location","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/referencepointdeterminationmethod","title":"let referencePointDeterminationMethod: Airport.LocationDeterminationMethod","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/elevationdeterminationmethod","title":"let elevationDeterminationMethod: Airport.LocationDeterminationMethod?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/magneticvariation","title":"let magneticVariation: Int?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/magneticvariationepoch","title":"let magneticVariationEpoch: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/trafficpatternaltitude","title":"let trafficPatternAltitude: Int?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/sectionalchart","title":"let sectionalChart: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/distancecitytoairport","title":"let distanceCityToAirport: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/directioncitytoairport","title":"let directionCityToAirport: Direction?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/landarea","title":"let landArea: Float?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/positionsource","title":"let positionSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/positionsourcedate","title":"let positionSourceDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/elevationsource","title":"let elevationSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/elevationsourcedate","title":"let elevationSourceDate: Date?","type":"property"},{"title":"FAA services","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/boundaryartccid","title":"let boundaryARTCCID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/boundaryartccs","title":"var boundaryARTCCs: Array<ARTCC>?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/responsibleartccid","title":"let responsibleARTCCID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/responsibleartccs","title":"var responsibleARTCCs: Array<ARTCC>?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/tieinfssid","title":"let tieInFSSID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/tieinfss","title":"var tieInFSS: FSS?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/tieinfssonstation","title":"let tieInFSSOnStation: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/alternatefssid","title":"let alternateFSSID: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/alternatefss","title":"var alternateFSS: FSS?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/notamissuerid","title":"let NOTAMIssuerID: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/notamissuer","title":"var NOTAMIssuer: FSS?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/notamdavailable","title":"let NOTAMDAvailable: Bool?","type":"property"},{"title":"Federal status","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/activationdate","title":"let activationDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.property","title":"let status: Airport.Status","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.property","title":"let ARFFCapability: Airport.ARFFCapability?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/agreements","title":"let agreements: Array<Airport.FederalAgreement>","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.property","title":"let airspaceAnalysisDetermination: Airport.AirspaceAnalysisDetermination?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/customsentryairport","title":"let customsEntryAirport: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/customslandingrightsairport","title":"let customsLandingRightsAirport: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/jointuseagreement","title":"let jointUseAgreement: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/militarylandingrights","title":"let militaryLandingRights: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/minimumoperationalnetwork","title":"let minimumOperationalNetwork: Bool","type":"property"},{"title":"Inspection data","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.property","title":"let inspectionMethod: Airport.InspectionMethod?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.property","title":"let inspectionAgency: Airport.InspectionAgency?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/lastphysicalinspectiondate","title":"let lastPhysicalInspectionDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/lastinformationrequestcompleteddate","title":"let lastInformationRequestCompletedDate: Date?","type":"property"},{"title":"Airport services","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fuelsavailable","title":"let fuelsAvailable: Array<Airport.FuelType>","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/airframerepairavailable","title":"let airframeRepairAvailable: Airport.RepairService?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/powerplantrepairavailable","title":"let powerplantRepairAvailable: Airport.RepairService?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/bottledoxygenavailable","title":"let bottledOxygenAvailable: Array<Airport.OxygenPressure>","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/bulkoxygenavailable","title":"let bulkOxygenAvailable: Array<Airport.OxygenPressure>","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/transientstoragefacilities","title":"let transientStorageFacilities: Array<Airport.StorageFacility>?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/otherservices","title":"let otherServices: Array<Airport.Service>","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/contractfuelavailable","title":"let contractFuelAvailable: Bool?","type":"property"},{"title":"Airport facilities","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportlightingschedule","title":"let airportLightingSchedule: Airport.LightingSchedule?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/beaconlightingschedule","title":"let beaconLightingSchedule: Airport.LightingSchedule?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/controltower","title":"let controlTower: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/unicomfrequency","title":"let UNICOMFrequency: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/ctaf","title":"let CTAF: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/segmentedcircle","title":"let segmentedCircle: Airport.AirportMarker?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/beaconcolor","title":"let beaconColor: Airport.LensColor?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/landingfee","title":"let landingFee: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/medicaluse","title":"let medicalUse: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/windindicator","title":"let windIndicator: Airport.AirportMarker?","type":"property"},{"title":"Based aircraft","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/basedsingleenginega","title":"let basedSingleEngineGA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/basedmultienginega","title":"let basedMultiEngineGA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/basedjetga","title":"let basedJetGA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/basedhelicopterga","title":"let basedHelicopterGA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/basedoperationalgliders","title":"let basedOperationalGliders: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/basedoperationalmilitary","title":"let basedOperationalMilitary: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/basedultralights","title":"let basedUltralights: UInt?","type":"property"},{"title":"Annual operations","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/annualcommercialops","title":"let annualCommercialOps: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/annualcommuterops","title":"let annualCommuterOps: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/annualairtaxiops","title":"let annualAirTaxiOps: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/annuallocalgaops","title":"let annualLocalGAOps: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/annualtransientgaops","title":"let annualTransientGAOps: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/annualmilitaryops","title":"let annualMilitaryOps: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/annualperiodenddate","title":"let annualPeriodEndDate: Date?","type":"property"},{"title":"Associated record classes","type":"groupMarker"},{"children":[{"title":"Associations","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/baseend","title":"let baseEnd: RunwayEnd","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/reciprocalend","title":"let reciprocalEnd: RunwayEnd?","type":"property"},{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/identification","title":"let identification: String","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/remarks","title":"var remarks: Remarks<Runway.Field>","type":"property"},{"title":"Dimensions","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/length","title":"let length: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/width","title":"let width: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/lengthsource","title":"let lengthSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/lengthsourcedate","title":"let lengthSourceDate: Date?","type":"property"},{"title":"Construction","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/materials","title":"let materials: Set<Runway.Material>","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.property","title":"let condition: Runway.Condition?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.property","title":"let treatment: Runway.Treatment?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.property","title":"let pavementClassification: Runway.PavementClassification?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/ispaved","title":"var isPaved: Bool","type":"property"},{"title":"Lighting","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightsintensity","title":"let edgeLightsIntensity: Runway.EdgeLightIntensity?","type":"property"},{"title":"Weight capacity","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/singlewheelweightbearingcapacity","title":"let singleWheelWeightBearingCapacity: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/dualwheelweightbearingcapacity","title":"let dualWheelWeightBearingCapacity: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/tandemdualwheelweightbearingcapacity","title":"let tandemDualWheelWeightBearingCapacity: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/doubletandemdualwheelweightbearingcapacity","title":"let doubleTandemDualWheelWeightBearingCapacity: UInt?","type":"property"},{"title":"Associated records","type":"groupMarker"},{"children":[{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/id","title":"let ID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/remarks","title":"var remarks: Remarks<RunwayEnd.Field>","type":"property"},{"title":"Dimensions and geographics","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/trueheading","title":"let trueHeading: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglidepath","title":"let visualGlidepath: Float?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/gradient","title":"let gradient: Float?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahso","title":"var LAHSO: RunwayEnd.LAHSOPoint?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.property","title":"var controllingObject: RunwayEnd.ControllingObject?","type":"property"},{"title":"Position","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/threshold","title":"let threshold: Location?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/positionsource","title":"let positionSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/positionsourcedate","title":"let positionSourceDate: Date?","type":"property"},{"title":"Elevation","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/thresholdcrossingheight","title":"let thresholdCrossingHeight: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/touchdownzoneelevation","title":"let touchdownZoneElevation: Float?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/elevationsource","title":"let elevationSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/elevationsourcedate","title":"let elevationSourceDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/touchdownzoneelevationsource","title":"let touchdownZoneElevationSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/touchdownzoneelevationsourcedate","title":"let touchdownZoneElevationSourceDate: Date?","type":"property"},{"title":"Displaced threshold","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/displacedthreshold","title":"let displacedThreshold: Location?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/thresholddisplacement","title":"let thresholdDisplacement: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/displacedthresholdpositionsource","title":"let displacedThresholdPositionSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/displacedthresholdpositionsourcedate","title":"let displacedThresholdPositionSourceDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/displacedthresholdelevationsource","title":"let displacedThresholdElevationSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/displacedthresholdelevationsourcedate","title":"let displacedThresholdElevationSourceDate: Date?","type":"property"},{"title":"Declared distances","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/tora","title":"let TORA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/toda","title":"let TODA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/asda","title":"let ASDA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lda","title":"let LDA: UInt?","type":"property"},{"title":"Equipment","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.property","title":"let instrumentLandingSystem: RunwayEnd.InstrumentLandingSystem?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.property","title":"let visualGlideslopeIndicator: RunwayEnd.VisualGlideslopeIndicator?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensors","title":"let RVRSensors: Array<RunwayEnd.RVRSensor>","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/hasrvv","title":"let hasRVV: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/arrestingsystems","title":"var arrestingSystems: [String]","type":"property"},{"title":"Lighting","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.property","title":"let approachLighting: RunwayEnd.ApproachLighting?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/hasreil","title":"let hasREIL: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/hascenterlinelighting","title":"let hasCenterlineLighting: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/endtouchdownlighting","title":"let endTouchdownLighting: Bool?","type":"property"},{"title":"Traffic pattern","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/righttraffic","title":"let rightTraffic: Bool?","type":"property"},{"title":"Markings","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.property","title":"let marking: RunwayEnd.Marking?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.property","title":"let markingCondition: RunwayEnd.MarkingCondition?","type":"property"},{"title":"Associated types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/number","title":"let number: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.property","title":"let side: RunwayEnd.VisualGlideslopeIndicator.Side?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/type","title":"let type: RunwayEnd.VisualGlideslopeIndicator.Classification","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/papi","title":"case PAPI","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/savasi","title":"case SAVASI","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/vasi","title":"case VASI","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/nonspecificvasi","title":"case nonspecificVASI","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/nonstandard","title":"case nonstandard","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/panels","title":"case panels","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/private","title":"case `private`","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/pulsatingvasi","title":"case pulsatingVASI","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/tricolorvasi","title":"case tricolorVASI","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification","title":"RunwayEnd.VisualGlideslopeIndicator.Classification","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/both","title":"case both","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/left","title":"case left","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/right","title":"case right","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum","title":"RunwayEnd.VisualGlideslopeIndicator.Side","type":"enum"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct","title":"RunwayEnd.VisualGlideslopeIndicator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.property","title":"let category: RunwayEnd.ControllingObject.Category","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/clearanceslope","title":"let clearanceSlope: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/distancefromrunway","title":"let distanceFromRunway: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/heightaboverunway","title":"let heightAboveRunway: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/markings","title":"let markings: Array<RunwayEnd.ControllingObject.Marking>","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/offsetfromcenterline","title":"let offsetFromCenterline: Offset?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/remarks","title":"var remarks: Remarks<RunwayEnd.ControllingObject.Field>","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/runwaycategory","title":"let runwayCategory: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/aircraft","title":"case aircraft","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/antenna","title":"case antenna","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/berm","title":"case berm","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/boat","title":"case boat","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/bridge","title":"case bridge","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/brush","title":"case brush","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/building","title":"case building","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/crops","title":"case crops","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/fence","title":"case fence","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/hangar","title":"case hangar","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/hill","title":"case hill","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/light","title":"case light","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/other(_:)","title":"case other(String?)","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/pole","title":"case pole","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/railroad","title":"case railroad","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/road","title":"case road","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/sign","title":"case sign","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/stack","title":"case stack","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/tank","title":"case tank","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/terrain","title":"case terrain","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/tower","title":"case tower","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/tree","title":"case tree","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/trees","title":"case trees","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/utilityline","title":"case utilityLine","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/init(from:)-122tn","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/rawvalue-swift.property","title":"var rawValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/rawvalue-swift.typealias","title":"RunwayEnd.ControllingObject.Category.RawValue","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/init(from:)-8uw5o","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum","title":"RunwayEnd.ControllingObject.Category","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/category","title":"case category","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/clearanceslope","title":"case clearanceSlope","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/distancefromrunway","title":"case distanceFromRunway","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/heightaboverunway","title":"case heightAboveRunway","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/markings","title":"case markings","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/offsetfromcenterline","title":"case offsetFromCenterline","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/runwaycategory","title":"case runwayCategory","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field","title":"RunwayEnd.ControllingObject.Field","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/lighted","title":"case lighted","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/marked","title":"case marked","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking","title":"RunwayEnd.ControllingObject.Marking","type":"enum"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct","title":"RunwayEnd.ControllingObject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/availabledistance","title":"let availableDistance: UInt","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/definingentity","title":"let definingEntity: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/intersectingrunway","title":"var intersectingRunway: Runway?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/intersectingrunwayid","title":"let intersectingRunwayID: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/position","title":"let position: Location?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/positionsource","title":"let positionSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/positionsourcedate","title":"let positionSourceDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/remarks","title":"var remarks: Remarks<RunwayEnd.LAHSOPoint.Field>","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/availabledistance","title":"case availableDistance","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/definingentity","title":"case definingEntity","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/intersectingrunwayid","title":"case intersectingRunwayID","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/position","title":"case position","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/positionsource","title":"case positionSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/positionsourcedate","title":"case positionSourceDate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field","title":"RunwayEnd.LAHSOPoint.Field","type":"enum"}],"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint","title":"RunwayEnd.LAHSOPoint","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/ils","title":"case ILS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/ils_dme","title":"case ILS_DME","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/lda","title":"case LDA","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/lda_dme","title":"case LDA_DME","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/loc_dme","title":"case LOC_DME","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/mls","title":"case MLS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/sdf","title":"case SDF","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/sdf_dme","title":"case SDF_DME","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/interimstandardmls","title":"case interimStandardMLS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/localizer","title":"case localizer","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum","title":"RunwayEnd.InstrumentLandingSystem","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/stol","title":"case STOL","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/basic","title":"case basic","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/buoys","title":"case buoys","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/nonprecisioninstrument","title":"case nonprecisionInstrument","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/nonstandard","title":"case nonstandard","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/numbers","title":"case numbers","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/precisioninstrument","title":"case precisionInstrument","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum","title":"RunwayEnd.Marking","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/fair","title":"case fair","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/good","title":"case good","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/poor","title":"case poor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum","title":"RunwayEnd.MarkingCondition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/midpoint","title":"case midpoint","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/rollout","title":"case rollout","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/touchdown","title":"case touchdown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor","title":"RunwayEnd.RVRSensor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/alsaf","title":"case ALSAF","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/alsf","title":"case ALSF","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/alsf1","title":"case ALSF1","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/alsf2","title":"case ALSF2","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/mals","title":"case MALS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/malsf","title":"case MALSF","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/malsr","title":"case MALSR","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/odals","title":"case ODALS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/rail","title":"case RAIL","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/rlls","title":"case RLLS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/ssalf","title":"case SSALF","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/ssalr","title":"case SSALR","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/ssals","title":"case SSALS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/militaryoverrun","title":"case militaryOverrun","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/neonladder","title":"case neonLadder","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/nonstandard","title":"case nonstandard","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum","title":"RunwayEnd.ApproachLighting","type":"enum"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/asda","title":"case ASDA","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/id","title":"case ID","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/lahso","title":"case LAHSO","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/lda","title":"case LDA","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/rvrsensors","title":"case RVRSensors","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/toda","title":"case TODA","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/tora","title":"case TORA","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/approachlighting","title":"case approachLighting","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/arrestingsystems","title":"case arrestingSystems","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/controllingobject","title":"case controllingObject","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/displacedthreshold","title":"case displacedThreshold","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/displacedthresholdelevationsource","title":"case displacedThresholdElevationSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/displacedthresholdelevationsourcedate","title":"case displacedThresholdElevationSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/displacedthresholdpositionsource","title":"case displacedThresholdPositionSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/displacedthresholdpositionsourcedate","title":"case displacedThresholdPositionSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/elevationsource","title":"case elevationSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/elevationsourcedate","title":"case elevationSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/endtouchdownlighting","title":"case endTouchdownLighting","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/gradient","title":"case gradient","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/hascenterlinelighting","title":"case hasCenterlineLighting","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/hasreil","title":"case hasREIL","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/hasrvv","title":"case hasRVV","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/instrumentlandingsystem","title":"case instrumentLandingSystem","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/marking","title":"case marking","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/markingcondition","title":"case markingCondition","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/positionsource","title":"case positionSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/positionsourcedate","title":"case positionSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/righttraffic","title":"case rightTraffic","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/threshold","title":"case threshold","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/thresholdcrossingheight","title":"case thresholdCrossingHeight","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/thresholddisplacement","title":"case thresholdDisplacement","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/touchdownzoneelevation","title":"case touchdownZoneElevation","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/touchdownzoneelevationsource","title":"case touchdownZoneElevationSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/touchdownzoneelevationsourcedate","title":"case touchdownZoneElevationSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/trueheading","title":"case trueHeading","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/visualglidepath","title":"case visualGlidepath","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/visualglideslopeindicator","title":"case visualGlideslopeIndicator","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/field","title":"RunwayEnd.Field","type":"enum"}],"path":"\/documentation\/swiftnasr\/runwayend","title":"RunwayEnd","type":"class"},{"title":"Associated types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.property","title":"let determinationMethod: Runway.PavementClassification.DeterminationMethod","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/number","title":"let number: UInt","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.property","title":"let subgradeStrengthCategory: Runway.PavementClassification.SubgradeStrengthCategory","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.property","title":"let tirePressureLimit: Runway.PavementClassification.TirePressureLimit","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/type","title":"let type: Runway.PavementClassification.Classification","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/flexible","title":"case flexible","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/rigid","title":"case rigid","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification","title":"Runway.PavementClassification.Classification","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/aircraft","title":"case aircraft","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/technical","title":"case technical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum","title":"Runway.PavementClassification.DeterminationMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/ultralow","title":"case ultralow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum","title":"Runway.PavementClassification.SubgradeStrengthCategory","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/unlimited","title":"case unlimited","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum","title":"Runway.PavementClassification.TirePressureLimit","type":"enum"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct","title":"Runway.PavementClassification","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/material\/asphalt","title":"case asphalt","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/brick","title":"case brick","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/concrete","title":"case concrete","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/deck","title":"case deck","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/dirt","title":"case dirt","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/gradedorrolledearth","title":"case gradedOrRolledEarth","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/gravel","title":"case gravel","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/ice","title":"case ice","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/metal","title":"case metal","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/nonstandard","title":"case nonstandard","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/partiallyconcreteorasphalt","title":"case partiallyConcreteOrAsphalt","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/piercedsteel","title":"case piercedSteel","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/roof","title":"case roof","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/sand","title":"case sand","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/snow","title":"case snow","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/treated","title":"case treated","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/turf","title":"case turf","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/water","title":"case water","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/wood","title":"case wood","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/material\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/material\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/material\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/material\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/material\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/material\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/material\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/material\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/material","title":"Runway.Material","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/excellent","title":"case excellent","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/fair","title":"case fair","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/good","title":"case good","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/poor","title":"case poor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum","title":"Runway.Condition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/afsc","title":"case AFSC","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/pfc","title":"case PFC","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/rfsc","title":"case RFSC","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/grooved","title":"case grooved","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/wirecomb","title":"case wireComb","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum","title":"Runway.Treatment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/flood","title":"case flood","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/nonstandard","title":"case nonstandard","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/perimeter","title":"case perimeter","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/strobe","title":"case strobe","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity","title":"Runway.EdgeLightIntensity","type":"enum"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/field\/baseend","title":"case baseEnd","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/condition","title":"case condition","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/doubletandemdualwheelweightbearingcapacity","title":"case doubleTandemDualWheelWeightBearingCapacity","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/dualwheelweightbearingcapacity","title":"case dualWheelWeightBearingCapacity","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/edgelightsintensity","title":"case edgeLightsIntensity","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/identification","title":"case identification","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/length","title":"case length","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/lengthsource","title":"case lengthSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/lengthsourcedate","title":"case lengthSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/materials","title":"case materials","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/pavementclassification","title":"case pavementClassification","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/reciprocalend","title":"case reciprocalEnd","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/singlewheelweightbearingcapacity","title":"case singleWheelWeightBearingCapacity","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/tandemdualwheelweightbearingcapacity","title":"case tandemDualWheelWeightBearingCapacity","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/treatment","title":"case treatment","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/width","title":"case width","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/field","title":"Runway.Field","type":"enum"}],"path":"\/documentation\/swiftnasr\/runway","title":"Runway","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/attendanceschedule\/components(monthly:daily:hourly:)","title":"case components(monthly: String, daily: String, hourly: String)","type":"case"},{"path":"\/documentation\/swiftnasr\/attendanceschedule\/custom(_:)","title":"case custom(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/attendanceschedule\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/attendanceschedule\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/swiftnasr\/attendanceschedule","title":"AttendanceSchedule","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/remark\/field(field:content:)","title":"case field(field: RemarkField, content: String)","type":"case"},{"path":"\/documentation\/swiftnasr\/remark\/fuel(field:fuel:content:)","title":"case fuel(field: RemarkField, fuel: Airport.FuelType, content: String)","type":"case"},{"path":"\/documentation\/swiftnasr\/remark\/general(_:)","title":"case general(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/remark\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/remark\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/swiftnasr\/remark","title":"Remark","type":"enum"},{"title":"Associated types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/address1","title":"let address1: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/person\/address2","title":"let address2: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/person\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/person\/phone","title":"let phone: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/person\/remarks","title":"var remarks: Remarks<Airport.Person.Field>","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/address1","title":"case address1","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/address2","title":"case address2","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/name","title":"case name","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/phone","title":"case phone","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/person\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/person\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/person\/field","title":"Airport.Person.Field","type":"enum"}],"path":"\/documentation\/swiftnasr\/airport\/person","title":"Airport.Person","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/airport","title":"case airport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/balloonport","title":"case balloonport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/gliderport","title":"case gliderport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/heliport","title":"case heliport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/seaport","title":"case seaport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/ultralight","title":"case ultralight","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum","title":"Airport.FacilityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/alaska","title":"case alaska","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/central","title":"case central","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/eastern","title":"case eastern","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/greatlakes","title":"case greatLakes","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/international","title":"case international","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/newengland","title":"case newEngland","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/northwestmountain","title":"case northwestMountain","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/southern","title":"case southern","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/southwest","title":"case southwest","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/westernpacific","title":"case westernPacific","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum","title":"Airport.FAARegion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/usaf","title":"case USAF","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/usarmy","title":"case USArmy","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/uscg","title":"case USCG","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/usn","title":"case USN","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/private","title":"case `private`","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/public","title":"case `public`","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum","title":"Airport.Ownership","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/estimated","title":"case estimated","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/surveyed","title":"case surveyed","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod","title":"Airport.LocationDeterminationMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/closedindefinitely","title":"case closedIndefinitely","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/closedpermanently","title":"case closedPermanently","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/operational","title":"case operational","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum","title":"Airport.Status","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/faapadvanceplanning","title":"case FAAPAdvancePlanning","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/fande","title":"case FandE","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/npias","title":"case NPIAS","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/accessibilitycompliance","title":"case accessibilityCompliance","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/civilrightsactassurances","title":"case civilRightsActAssurances","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/conveyancefaa16_23","title":"case conveyanceFAA16_23","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/conveyancefaa303c","title":"case conveyanceFAA303C","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/expired303cauthority","title":"case expired303CAuthority","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/expiredap4agreement","title":"case expiredAP4Agreement","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/expiredgrantagreement","title":"case expiredGrantAgreement","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/grantagreements","title":"case grantAgreements","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/surpluspubliclaw289","title":"case surplusPublicLaw289","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/surplusregulation16waa","title":"case surplusRegulation16WAA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/transferobligations","title":"case transferObligations","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown0","title":"case unknown0","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown4","title":"case unknown4","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown5","title":"case unknown5","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown6","title":"case unknown6","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown7","title":"case unknown7","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown8","title":"case unknown8","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown9","title":"case unknown9","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknowna","title":"case unknownA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknowne","title":"case unknownE","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknownl","title":"case unknownL","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknownm","title":"case unknownM","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknowno","title":"case unknownO","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/federalagreement","title":"Airport.FederalAgreement","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/conditional","title":"case conditional","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/noobjection","title":"case noObjection","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/notanalyzed","title":"case notAnalyzed","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/objectionable","title":"case objectionable","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum","title":"Airport.AirspaceAnalysisDetermination","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/contractor","title":"case contractor","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/federal","title":"case federal","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/privateusemailout","title":"case privateUseMailout","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/publicusemailout","title":"case publicUseMailout","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/state","title":"case state","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum","title":"Airport.InspectionMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/faapersonnel","title":"case FAAPersonnel","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/contractpersonnel","title":"case contractPersonnel","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/owner","title":"case owner","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/statepersonnel","title":"case statePersonnel","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum","title":"Airport.InspectionAgency","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/j8plus100","title":"case J8Plus100","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jp4","title":"case JP4","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jp5","title":"case JP5","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jp8","title":"case JP8","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/avgas100","title":"case avgas100","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/avgas100ll","title":"case avgas100LL","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/avgas115","title":"case avgas115","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/avgas80","title":"case avgas80","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/avgasul91","title":"case avgasUL91","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/avgasul94","title":"case avgasUL94","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jeta","title":"case jetA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jeta1","title":"case jetA1","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jeta1plus","title":"case jetA1Plus","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jetaplus","title":"case jetAPlus","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jetaplusplus","title":"case jetAPlusPlus","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jetaplusplus100","title":"case jetAPlusPlus100","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jetb","title":"case jetB","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jetbplus","title":"case jetBPlus","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jetgeneric","title":"case jetGeneric","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/mogas","title":"case mogas","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/fueltype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/fueltype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/fueltype","title":"Airport.FuelType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/major","title":"case major","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/minor","title":"case minor","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/repairservice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/repairservice\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/repairservice","title":"Airport.RepairService","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure","title":"Airport.OxygenPressure","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/buoys","title":"case buoys","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/hangars","title":"case hangars","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/tiedowns","title":"case tiedowns","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/storagefacility","title":"Airport.StorageFacility","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/service\/airambulance","title":"case airAmbulance","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/airfreight","title":"case airFreight","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/aircraftrental","title":"case aircraftRental","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/aircraftsales","title":"case aircraftSales","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/annualsurveying","title":"case annualSurveying","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/avionics","title":"case avionics","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/beachinggear","title":"case beachingGear","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/cargohandling","title":"case cargoHandling","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/charter","title":"case charter","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/cropdusting","title":"case cropDusting","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/glider","title":"case glider","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/glidertowing","title":"case gliderTowing","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/parachutejumping","title":"case parachuteJumping","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/pilotinstruction","title":"case pilotInstruction","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/service\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/service\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/service\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/service\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/service\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/service\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/service\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/service\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/service","title":"Airport.Service","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/seeremarks","title":"case seeRemarks","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/sunsetsunrise","title":"case sunsetSunrise","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/unlighted","title":"case unlighted","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/lightingschedule","title":"Airport.LightingSchedule","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/lighted","title":"case lighted","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/none","title":"case none","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/unlighted","title":"case unlighted","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/airportmarker","title":"Airport.AirportMarker","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/clear","title":"case clear","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/cleargreen","title":"case clearGreen","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/cleargreenyellow","title":"case clearGreenYellow","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/clearyellow","title":"case clearYellow","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/green","title":"case green","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/none","title":"case none","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/splitcleargreen","title":"case splitClearGreen","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/yellow","title":"case yellow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/lenscolor","title":"Airport.LensColor","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.property","title":"let airService: Airport.ARFFCapability.AirService","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/certificationdate","title":"let certificationDate: Date","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.property","title":"let `class`: Airport.ARFFCapability.Class","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.property","title":"let index: Airport.ARFFCapability.Index","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/scheduled","title":"case scheduled","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/unscheduled","title":"case unscheduled","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum","title":"Airport.ARFFCapability.AirService","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/i","title":"case I","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/ii","title":"case II","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/iii","title":"case III","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/iv","title":"case IV","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum","title":"Airport.ARFFCapability.Class","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/a","title":"case A","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/b","title":"case B","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/c","title":"case C","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/d","title":"case D","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/e","title":"case E","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/limited","title":"case limited","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum","title":"Airport.ARFFCapability.Index","type":"enum"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct","title":"Airport.ARFFCapability","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/==(_:_:)","title":"static func == (Airport, Airport) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/id-3kxuq","title":"var id: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/arffcapability","title":"case ARFFCapability","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/ctaf","title":"case CTAF","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/faafieldofficecode","title":"case FAAFieldOfficeCode","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/faaregion","title":"case FAARegion","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/icaoidentifier","title":"case ICAOIdentifier","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/lid","title":"case LID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/notamdavailable","title":"case NOTAMDAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/notamissuerid","title":"case NOTAMIssuerID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/unicomfrequency","title":"case UNICOMFrequency","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/activationdate","title":"case activationDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/agreements","title":"case agreements","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/airframerepairavailable","title":"case airframeRepairAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/airportlightingschedule","title":"case airportLightingSchedule","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/airspaceanalysisdetermination","title":"case airspaceAnalysisDetermination","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/alternatefssid","title":"case alternateFSSID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annualairtaxiops","title":"case annualAirTaxiOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annualcommercialops","title":"case annualCommercialOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annualcommuterops","title":"case annualCommuterOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annuallocalgaops","title":"case annualLocalGAOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annualmilitaryops","title":"case annualMilitaryOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annualperiodenddate","title":"case annualPeriodEndDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annualtransientgaops","title":"case annualTransientGAOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/attendanceschedule","title":"case attendanceSchedule","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedhelicopterga","title":"case basedHelicopterGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedjetga","title":"case basedJetGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedmultienginega","title":"case basedMultiEngineGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedoperationalgliders","title":"case basedOperationalGliders","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedoperationalmilitary","title":"case basedOperationalMilitary","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedsingleenginega","title":"case basedSingleEngineGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedultralights","title":"case basedUltralights","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/beaconcolor","title":"case beaconColor","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/beaconlightingschedule","title":"case beaconLightingSchedule","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/bottledoxygenavailable","title":"case bottledOxygenAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/boundaryartccid","title":"case boundaryARTCCID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/bulkoxygenavailable","title":"case bulkOxygenAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/city","title":"case city","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/contractfuelavailable","title":"case contractFuelAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/controltower","title":"case controlTower","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/county","title":"case county","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/countystatecode","title":"case countyStateCode","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/customsentryairport","title":"case customsEntryAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/customslandingrightsairport","title":"case customsLandingRightsAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/directioncitytoairport","title":"case directionCityToAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/distancecitytoairport","title":"case distanceCityToAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/elevationdeterminationmethod","title":"case elevationDeterminationMethod","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/elevationsource","title":"case elevationSource","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/elevationsourcedate","title":"case elevationSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/facilitytype","title":"case facilityType","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/fuelsavailable","title":"case fuelsAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/inspectionagency","title":"case inspectionAgency","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/inspectionmethod","title":"case inspectionMethod","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/jointuseagreement","title":"case jointUseAgreement","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/landarea","title":"case landArea","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/landingfee","title":"case landingFee","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/lastinformationrequestcompleteddate","title":"case lastInformationRequestCompletedDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/lastphysicalinspectiondate","title":"case lastPhysicalInspectionDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/magneticvariation","title":"case magneticVariation","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/magneticvariationepoch","title":"case magneticVariationEpoch","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/manager","title":"case manager","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/medicaluse","title":"case medicalUse","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/militarylandingrights","title":"case militaryLandingRights","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/minimumoperationalnetwork","title":"case minimumOperationalNetwork","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/otherservices","title":"case otherServices","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/owner","title":"case owner","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/ownership","title":"case ownership","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/positionsource","title":"case positionSource","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/positionsourcedate","title":"case positionSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/powerplantrepairavailable","title":"case powerplantRepairAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/publicuse","title":"case publicUse","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/referencepoint","title":"case referencePoint","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/referencepointdeterminationmethod","title":"case referencePointDeterminationMethod","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/remarks","title":"case remarks","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/responsibleartccid","title":"case responsibleARTCCID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/runways","title":"case runways","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/sectionalchart","title":"case sectionalChart","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/segmentedcircle","title":"case segmentedCircle","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/statecode","title":"case stateCode","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/tieinfssid","title":"case tieInFSSID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/tieinfssonstation","title":"case tieInFSSOnStation","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/trafficpatternaltitude","title":"case trafficPatternAltitude","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/transientstoragefacilities","title":"case transientStorageFacilities","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/windindicator","title":"case windIndicator","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/codingkeys","title":"Airport.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/field\/arffcapability","title":"case ARFFCapability","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/ctaf","title":"case CTAF","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/faafieldofficecode","title":"case FAAFieldOfficeCode","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/faaregion","title":"case FAARegion","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/icaoidentifier","title":"case ICAOIdentifier","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/lid","title":"case LID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/notamdavailable","title":"case NOTAMDAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/notamissuerid","title":"case NOTAMIssuerID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/unicomfrequency","title":"case UNICOMFrequency","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/activationdate","title":"case activationDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/agreements","title":"case agreements","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/airframerepairavailable","title":"case airframeRepairAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/airportlightingschedule","title":"case airportLightingSchedule","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/airspaceanalysisdetermination","title":"case airspaceAnalysisDetermination","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/alternatefssid","title":"case alternateFSSID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annualairtaxiops","title":"case annualAirTaxiOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annualcommercialops","title":"case annualCommercialOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annualcommuterops","title":"case annualCommuterOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annuallocalgaops","title":"case annualLocalGAOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annualmilitaryops","title":"case annualMilitaryOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annualperiodenddate","title":"case annualPeriodEndDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annualtransientgaops","title":"case annualTransientGAOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/attendanceschedule","title":"case attendanceSchedule","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedhelicopterga","title":"case basedHelicopterGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedjetga","title":"case basedJetGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedmultienginega","title":"case basedMultiEngineGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedoperationalgliders","title":"case basedOperationalGliders","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedoperationalmilitary","title":"case basedOperationalMilitary","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedsingleenginega","title":"case basedSingleEngineGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedultralights","title":"case basedUltralights","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/beaconcolor","title":"case beaconColor","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/beaconlightingschedule","title":"case beaconLightingSchedule","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/bottledoxygenavailable","title":"case bottledOxygenAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/boundaryartccid","title":"case boundaryARTCCID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/bulkoxygenavailable","title":"case bulkOxygenAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/city","title":"case city","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/contractfuelavailable","title":"case contractFuelAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/controltower","title":"case controlTower","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/county","title":"case county","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/countystatecode","title":"case countyStateCode","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/customsentryairport","title":"case customsEntryAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/customslandingrightsairport","title":"case customsLandingRightsAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/directioncitytoairport","title":"case directionCityToAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/distancecitytoairport","title":"case distanceCityToAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/elevationdeterminationmethod","title":"case elevationDeterminationMethod","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/elevationsource","title":"case elevationSource","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/elevationsourcedate","title":"case elevationSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/facilitytype","title":"case facilityType","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/fuelsavailable","title":"case fuelsAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/id","title":"case id","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/inspectionagency","title":"case inspectionAgency","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/inspectionmethod","title":"case inspectionMethod","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/jointuseagreement","title":"case jointUseAgreement","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/landarea","title":"case landArea","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/landingfee","title":"case landingFee","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/lastinformationrequestcompleteddate","title":"case lastInformationRequestCompletedDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/lastphysicalinspectiondate","title":"case lastPhysicalInspectionDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/magneticvariation","title":"case magneticVariation","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/magneticvariationepoch","title":"case magneticVariationEpoch","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/manager","title":"case manager","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/medicaluse","title":"case medicalUse","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/militarylandingrights","title":"case militaryLandingRights","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/minimumoperationalnetwork","title":"case minimumOperationalNetwork","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/name","title":"case name","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/otherservices","title":"case otherServices","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/owner","title":"case owner","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/ownership","title":"case ownership","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/positionsource","title":"case positionSource","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/positionsourcedate","title":"case positionSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/powerplantrepairavailable","title":"case powerplantRepairAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/publicuse","title":"case publicUse","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/referencepoint","title":"case referencePoint","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/referencepointdeterminationmethod","title":"case referencePointDeterminationMethod","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/responsibleartccid","title":"case responsibleARTCCID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/sectionalchart","title":"case sectionalChart","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/segmentedcircle","title":"case segmentedCircle","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/statecode","title":"case stateCode","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/status","title":"case status","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/tieinfssid","title":"case tieInFSSID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/tieinfssonstation","title":"case tieInFSSOnStation","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/trafficpatternaltitude","title":"case trafficPatternAltitude","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/transientstoragefacilities","title":"case transientStorageFacilities","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/windindicator","title":"case windIndicator","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/field","title":"Airport.Field","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/id-8m06u","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/swiftnasr\/airport\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport","title":"Airport","type":"class"},{"children":[{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/id","title":"let ID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/icaoid","title":"let ICAOID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/type","title":"let type: ARTCC.FacilityType","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/alternatename","title":"let alternateName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/remarks","title":"var remarks: Remarks<ARTCC.Field>","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/frequencies","title":"var frequencies: Array<ARTCC.CommFrequency>","type":"property"},{"title":"Location","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/locationname","title":"let locationName: String","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/statecode","title":"let stateCode: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/state","title":"var state: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/location","title":"let location: Location?","type":"property"},{"title":"Associated types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/arsr","title":"case ARSR","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/artcc","title":"case ARTCC","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/cerap","title":"case CERAP","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/rcag","title":"case RCAG","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/secra","title":"case SECRA","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/artcc\/facilitytype","title":"ARTCC.FacilityType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.property","title":"let altitude: Array<ARTCC.CommFrequency.Altitude>","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/associatedairport","title":"var associatedAirport: Airport?","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/associatedairportcode","title":"var associatedAirportCode: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/frequency","title":"let frequency: UInt","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/remarks","title":"var remarks: Remarks<ARTCC.CommFrequency.Field>","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/remoteoutletfrequencycharted","title":"let remoteOutletFrequencyCharted: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/specialusagename","title":"let specialUsageName: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/ultrahigh","title":"case ultraHigh","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum","title":"ARTCC.CommFrequency.Altitude","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/altitude","title":"case altitude","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/associatedairportcode","title":"case associatedAirportCode","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/specialusagename","title":"case specialUsageName","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field","title":"ARTCC.CommFrequency.Field","type":"enum"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency","title":"ARTCC.CommFrequency","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/==(_:_:)","title":"static func == (ARTCC, ARTCC) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/alternatename","title":"case alternateName","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/location","title":"case location","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/statecode","title":"case stateCode","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/artcc\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/artcc\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/artcc\/field","title":"ARTCC.Field","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/artcc\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/artcc","title":"ARTCC","type":"class"},{"children":[{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/id","title":"let ID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/radioidentifier","title":"let radioIdentifier: String?","type":"property"},{"title":"Basic info","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/type","title":"let type: FSS.FSSType","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/hoursofoperation","title":"let hoursOfOperation: String","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.property","title":"let status: FSS.Status?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/lowaltenroutechartnumber","title":"let lowAltEnrouteChartNumber: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/phonenumber","title":"let phoneNumber: String?","type":"property"},{"title":"Communications","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequencies","title":"let frequencies: Array<FSS.Frequency>","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacilities","title":"var commFacilities: Array<FSS.CommFacility>","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/outlets","title":"var outlets: Array<FSS.Outlet>","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/navaids","title":"var navaids: Array<FSS.Navaid>","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/airportadvisoryfrequencies","title":"let airportAdvisoryFrequencies: Array<FSS.Frequency>","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/volmets","title":"let VOLMETs: Array<FSS.VOLMET>","type":"property"},{"title":"Operator info","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/owner","title":"let owner: FSS.Operator?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/ownername","title":"let ownerName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.property","title":"let `operator`: FSS.Operator","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/operatorname","title":"let operatorName: String?","type":"property"},{"title":"Capabilities","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/hasweatherradar","title":"let hasWeatherRadar: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/hasefas","title":"let hasEFAS: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/flightwatchavailability","title":"let flightWatchAvailability: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/dfequipment","title":"let DFEquipment: FSS.DirectionFindingEquipment?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/nearestfsswithteletype","title":"var nearestFSSWithTeletype: FSS?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/nearestfssidwithteletype","title":"let nearestFSSIDWithTeletype: String?","type":"property"},{"title":"Location","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/airport","title":"var airport: Airport?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/airportid","title":"let airportID: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/city","title":"let city: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/statename","title":"let stateName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/state","title":"var state: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/region","title":"let region: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/location","title":"let location: Location?","type":"property"},{"title":"Remarks","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/remarks","title":"var remarks: Array<String>","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commremarks","title":"var commRemarks: Array<String>","type":"property"},{"title":"Associated types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/fs21hubstation","title":"case FS21HubStation","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/fs21radioservicearea","title":"case FS21RadioServiceArea","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/fss","title":"case FSS","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/airgroundfacility","title":"case airGroundFacility","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/baseops","title":"case baseOps","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/combinedstationtower","title":"case combinedStationTower","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/internationalfss","title":"case internationalFSS","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/fss\/fsstype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/fss\/fsstype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/fss\/fsstype","title":"FSS.FSSType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/receiveonly","title":"case receiveOnly","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/transmitonly","title":"case transmitOnly","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/transmitreceive","title":"case transmitReceive","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/fss\/frequency\/use","title":"FSS.Frequency.Use","type":"enum"}],"path":"\/documentation\/swiftnasr\/fss\/frequency","title":"FSS.Frequency","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/identification","title":"let identification: String","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/type","title":"let type: FSS.Outlet.OutletType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/rco","title":"case RCO","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/rco1","title":"case RCO1","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype","title":"FSS.Outlet.OutletType","type":"enum"}],"path":"\/documentation\/swiftnasr\/fss\/outlet","title":"FSS.Outlet","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/navaid\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/navaid\/identification","title":"let identification: String","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/navaid\/type","title":"let type: NavaidFacilityType","type":"property"}],"path":"\/documentation\/swiftnasr\/fss\/navaid","title":"FSS.Navaid","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/volmet\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/volmet\/frequency","title":"let frequency: FSS.Frequency","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/volmet\/schedule","title":"let schedule: String","type":"property"}],"path":"\/documentation\/swiftnasr\/fss\/volmet","title":"FSS.VOLMET","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/city","title":"let city: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/frequency","title":"let frequency: FSS.Frequency","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/location","title":"let location: Location?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/lowaltenroutechart","title":"let lowAltEnrouteChart: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/navaid","title":"let navaid: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/navaidtype","title":"let navaidType: NavaidFacilityType?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/operationalhours","title":"let operationalHours: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/operator","title":"let `operator`: FSS.Operator?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/operatorname","title":"let operatorName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/owner","title":"let owner: FSS.Operator?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/ownername","title":"let ownerName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/state","title":"var state: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/statename","title":"let stateName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/status","title":"let status: FSS.Status?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/statusdate","title":"let statusDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/timezone","title":"let timezone: String?","type":"property"}],"path":"\/documentation\/swiftnasr\/fss\/commfacility","title":"FSS.CommFacility","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/directionfindingequipment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/directionfindingequipment\/location","title":"let location: Location","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/directionfindingequipment\/type","title":"let type: String","type":"property"}],"path":"\/documentation\/swiftnasr\/fss\/directionfindingequipment","title":"FSS.DirectionFindingEquipment","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/faa","title":"case FAA","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/rcaf","title":"case RCAF","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/tc","title":"case TC","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/usaf","title":"case USAF","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/usarmy","title":"case USArmy","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/uscg","title":"case USCG","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/usn","title":"case USN","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/foreignfederalgovernment","title":"case foreignFederalGovernment","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/other","title":"case other","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/private","title":"case `private`","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum","title":"FSS.Operator","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/decomissioningdelayed","title":"case decomissioningDelayed","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/operationalifr","title":"case operationalIFR","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/operationalparttime","title":"case operationalPartTime","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum","title":"FSS.Status","type":"enum"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/==(_:_:)","title":"static func == (FSS, FSS) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/fss\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/fss","title":"FSS","type":"class"},{"children":[{"title":"Identification","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/id","title":"var ID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/type","title":"let type: Navaid.FacilityType","type":"property"},{"title":"Location","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/city","title":"let city: String","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/state","title":"var state: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/statename","title":"let stateName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/faaregion","title":"let FAARegion: String","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/country","title":"let country: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/position","title":"let position: Location","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.property","title":"let surveyAccuracy: Navaid.SurveyAccuracy?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/controllingfss","title":"var controllingFSS: FSS?","type":"property"},{"title":"Operator","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/ownername","title":"let ownerName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/operatorname","title":"let operatorName: String?","type":"property"},{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/commonsystemusage","title":"let commonSystemUsage: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/publicuse","title":"let publicUse: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/hoursofoperation","title":"let hoursOfOperation: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/magneticvariation","title":"let magneticVariation: Int?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/magneticvariationepoch","title":"let magneticVariationEpoch: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.property","title":"let monitoringCategory: Navaid.MonitoringCategory?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/notamaccountabilitycode","title":"let NOTAMAccountabilityCode: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.property","title":"let status: Navaid.Status","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/remarks","title":"var remarks: [String]","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/associatedfixnames","title":"var associatedFixNames: Set<String>","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/isoperational","title":"var isOperational: Bool","type":"property"},{"title":"Radio","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/simultaneousvoice","title":"let simultaneousVoice: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/poweroutput","title":"let powerOutput: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/automaticvoiceid","title":"let automaticVoiceID: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/radiovoicecall","title":"let radioVoiceCall: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/frequency","title":"let frequency: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/beaconidentifier","title":"let beaconIdentifier: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/hiwasflag","title":"let HIWASFlag: Bool?","type":"property"},{"title":"VOR\/DME","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/vorservicevolume","title":"let VORServiceVolume: Navaid.ServiceVolume?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/dmeservicevolume","title":"let DMEServiceVolume: Navaid.ServiceVolume?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/checkpoints","title":"var checkpoints: [VORCheckpoint]","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/isvor","title":"var isVOR: Bool","type":"property"},{"title":"TACAN","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.property","title":"let TACANChannel: Navaid.TACANChannel?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanposition","title":"let TACANPosition: Location?","type":"property"},{"title":"Marker Beacon","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.property","title":"let fanMarkerType: Navaid.FanMarkerType?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkermajorbearing","title":"let fanMarkerMajorBearing: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/zmarkeravailable","title":"let ZMarkerAvailable: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkers","title":"var fanMarkers: Set<String>","type":"property"},{"title":"TWEB","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/twebhours","title":"let TWEBHours: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/twebphone","title":"let TWEBPhone: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/twebrestrictionflag","title":"let TWEBRestrictionFlag: Bool?","type":"property"},{"title":"NDB","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/isndb","title":"var isNDB: Bool","type":"property"},{"title":"Low-frequency range","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/lfrlegs","title":"let LFRLegs: Array<LFRLeg>?","type":"property"},{"title":"Airspace usage","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.property","title":"let navaidClass: Navaid.NavaidClass?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/pitchflag","title":"let pitchFlag: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/catchflag","title":"let catchFlag: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/suaflag","title":"let SUAFlag: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/restrictionflag","title":"let restrictionFlag: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/lowaltitudeartcc","title":"var lowAltitudeARTCC: ARTCC?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/highaltitudeartcc","title":"var highAltitudeARTCC: ARTCC?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/lowaltitudeinhighstructure","title":"let lowAltitudeInHighStructure: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/associatedholdingpatterns","title":"var associatedHoldingPatterns: Set<HoldingPatternID>","type":"property"},{"title":"Associated types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/dme","title":"case DME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/ndb","title":"case NDB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/ndbdme","title":"case NDBDME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/tacan","title":"case TACAN","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/uhfndb","title":"case UHFNDB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/vor","title":"case VOR","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/vordme","title":"case VORDME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/vortac","title":"case VORTAC","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/vot","title":"case VOT","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/consolan","title":"case consolan","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/fanmarker","title":"case fanMarker","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/marinendb","title":"case marineNDB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/marinendbdme","title":"case marineNDBDME","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/facilitytype","title":"Navaid.FacilityType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitude","title":"var altitude: Navaid.NavaidClass.AltitudeCode?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/codes","title":"var codes: Set<Navaid.NavaidClass.ClassCode>","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/terminal","title":"case terminal","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode","title":"Navaid.NavaidClass.AltitudeCode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/atis","title":"case ATIS","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/dme","title":"case DME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/dmeyankeeband","title":"case DMEYankeeBand","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/fm","title":"case FM","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/fsstransmitonly","title":"case FSSTransmitOnly","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/ndbhighpower","title":"case NDBHighPower","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/ndblowpower","title":"case NDBLowPower","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/ndbmediumpower","title":"case NDBMediumPower","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/ndbnonifrwithtweb","title":"case NDBNonIFRWithTWEB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/ndbwithtweb","title":"case NDBWithTWEB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/parbackup","title":"case PARBackup","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/tacan","title":"case TACAN","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/tweb","title":"case TWEB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/vhfstationmarker","title":"case VHFStationMarker","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/vor","title":"case VOR","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/vortac","title":"case VORTAC","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/vot","title":"case VOT","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/automaticweatherbroadcast","title":"case automaticWeatherBroadcast","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/localizermiddlemarker","title":"case localizerMiddleMarker","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/localizeroutermarker","title":"case localizerOuterMarker","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/novoice","title":"case noVoice","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/scheduledweatherbroadcast","title":"case scheduledWeatherBroadcast","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/simultaneousrangehomingsignal","title":"case simultaneousRangeHomingSignal","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode","title":"Navaid.NavaidClass.ClassCode","type":"enum"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct","title":"Navaid.NavaidClass","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/navaidhigh","title":"case navaidHigh","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/navaidlow","title":"case navaidLow","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/terminal","title":"case terminal","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/servicevolume","title":"Navaid.ServiceVolume","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.enum\/nos","title":"case NOS","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.enum\/seconds(_:)","title":"case seconds(UInt)","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.enum\/thirdordertriangulation","title":"case thirdOrderTriangulation","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.enum\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.enum","title":"Navaid.SurveyAccuracy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/internalmonitoringonly","title":"case internalMonitoringOnly","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/statusinoppilotreportsok","title":"case statusInopPilotReportsOK","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/statusok","title":"case statusOK","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/statusonly","title":"case statusOnly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum","title":"Navaid.MonitoringCategory","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.property","title":"let band: Navaid.TACANChannel.Band","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/channel","title":"let channel: UInt8","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/x","title":"case X","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/y","title":"case Y","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum","title":"Navaid.TACANChannel.Band","type":"enum"}],"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct","title":"Navaid.TACANChannel","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/bone","title":"case bone","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/elliptical","title":"case elliptical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum","title":"Navaid.FanMarkerType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/decommissioned","title":"case decommissioned","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/operationalifr","title":"case operationalIFR","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/operationalrestricted","title":"case operationalRestricted","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/operationalvfr","title":"case operationalVFR","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/shutdown","title":"case shutdown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum","title":"Navaid.Status","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/airdescription","title":"let airDescription: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/airport","title":"var airport: Airport?","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/altitude","title":"let altitude: Int?","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/bearing","title":"let bearing: UInt","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/grounddescription","title":"let groundDescription: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/state","title":"var state: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/type","title":"let type: VORCheckpoint.CheckpointType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/airport(data:)","title":"func airport(data: NASRData) -> Airport?","type":"method"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/air","title":"case air","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/ground","title":"case ground","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/ground1","title":"case ground1","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype","title":"VORCheckpoint.CheckpointType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/airdescription","title":"case airDescription","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/airportid","title":"case airportID","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/altitude","title":"case altitude","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/bearing","title":"case bearing","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/grounddescription","title":"case groundDescription","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/statecode","title":"case stateCode","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys","title":"VORCheckpoint.CodingKeys","type":"enum"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint","title":"VORCheckpoint","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/holdingpatternid\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/holdingpatternid\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftnasr\/holdingpatternid\/number","title":"let number: UInt","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/holdingpatternid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/holdingpatternid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/holdingpatternid","title":"HoldingPatternID","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/bearing","title":"let bearing: UInt","type":"property"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.property","title":"let quadrant: LFRLeg.Quadrant","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/a","title":"case A","type":"case"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/n","title":"case N","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum","title":"LFRLeg.Quadrant","type":"enum"}],"path":"\/documentation\/swiftnasr\/lfrleg","title":"LFRLeg","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/dme","title":"case DME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/lfr","title":"case LFR","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/ndb","title":"case NDB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/ndb_dme","title":"case NDB_DME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/tacan","title":"case TACAN","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/uhf_ndb","title":"case UHF_NDB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/vor","title":"case VOR","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/vordme","title":"case VORDME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/vortac","title":"case VORTAC","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/vot","title":"case VOT","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/fanmarker","title":"case fanMarker","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/marinendb","title":"case marineNDB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/marinendb_dme","title":"case marineNDB_DME","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaidfacilitytype","title":"NavaidFacilityType","type":"enum"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/==(_:_:)","title":"static func == (Navaid, Navaid) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid","title":"Navaid","type":"class"},{"path":"\/documentation\/swiftnasr\/record","title":"Record","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/state\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/state\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftnasr\/state\/postofficecode","title":"let postOfficeCode: String","type":"property"}],"path":"\/documentation\/swiftnasr\/state","title":"State","type":"class"},{"title":"Parsing records","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/init(loader:)","title":"init(loader: Loader)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/data","title":"var data: NASRData","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> NASR","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Void, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<NASR, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/parsestates(withprogress:)","title":"func parseStates(withProgress: (Progress) -> Void) async throws -> Array<State>","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/parsestatespublisher(errorhandler:withprogress:)","title":"func parseStatesPublisher(errorHandler: ((Error) -> Void)?, withProgress: (Progress) -> Void) -> AnyPublisher<Array<State>, Error>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/progressqueue","title":"static var progressQueue: DispatchQueue","type":"property"}],"path":"\/documentation\/swiftnasr\/nasr","title":"NASR","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasrdata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasrdata\/artccs","title":"var ARTCCs: Array<ARTCC>?","type":"property"},{"path":"\/documentation\/swiftnasr\/nasrdata\/fsses","title":"var FSSes: Array<FSS>?","type":"property"},{"path":"\/documentation\/swiftnasr\/nasrdata\/airports","title":"var airports: Array<Airport>?","type":"property"},{"path":"\/documentation\/swiftnasr\/nasrdata\/cycle","title":"var cycle: Cycle?","type":"property"},{"path":"\/documentation\/swiftnasr\/nasrdata\/navaids","title":"var navaids: Array<Navaid>?","type":"property"},{"path":"\/documentation\/swiftnasr\/nasrdata\/states","title":"var states: Array<State>?","type":"property"}],"path":"\/documentation\/swiftnasr\/nasrdata","title":"NASRData","type":"class"},{"path":"\/documentation\/swiftnasr\/nasr\/parse(_:withprogress:errorhandler:completionhandler:)","title":"func parse(RecordType, withProgress: (Progress) -> Void, errorHandler: (Error) -> Bool, completionHandler: () -> Void) throws","type":"method"},{"title":"Parsing records with Combine","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/parseairportspublisher(errorhandler:withprogress:)","title":"func parseAirportsPublisher(errorHandler: ((Error) -> Void)?, withProgress: (Progress) -> Void) -> AnyPublisher<Array<Airport>, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/parseartccspublisher(errorhandler:withprogress:)","title":"func parseARTCCsPublisher(errorHandler: ((Error) -> Void)?, withProgress: (Progress) -> Void) -> AnyPublisher<Array<ARTCC>, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/parsefssespublisher(errorhandler:withprogress:)","title":"func parseFSSesPublisher(errorHandler: ((Error) -> Void)?, withProgress: (Progress) -> Void) -> AnyPublisher<Array<FSS>, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/parsenavaidspublisher(errorhandler:withprogress:)","title":"func parseNavaidsPublisher(errorHandler: ((Error) -> Void)?, withProgress: (Progress) -> Void) -> AnyPublisher<Array<Navaid>, Error>","type":"method"},{"title":"Parsing records async","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/parseairports(withprogress:errorhandler:)","title":"func parseAirports(withProgress: (Progress) -> Void, errorHandler: (Error) -> Bool) async throws -> Array<Airport>","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/parseartccs(withprogress:errorhandler:)","title":"func parseARTCCs(withProgress: (Progress) -> Void, errorHandler: (Error) -> Bool) async throws -> Array<ARTCC>","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/parsefsses(withprogress:errorhandler:)","title":"func parseFSSes(withProgress: (Progress) -> Void, errorHandler: (Error) -> Bool) async throws -> Array<FSS>","type":"method"},{"path":"\/documentation\/swiftnasr\/nasr\/parsenavaids(withprogress:errorhandler:)","title":"func parseNavaids(withProgress: (Progress) -> Void, errorHandler: (Error) -> Bool) async throws -> Array<Navaid>","type":"method"},{"title":"Associated types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/location\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/location\/elevation","title":"let elevation: Float?","type":"property"},{"path":"\/documentation\/swiftnasr\/location\/latitude","title":"let latitude: Float","type":"property"},{"path":"\/documentation\/swiftnasr\/location\/longitude","title":"let longitude: Float","type":"property"}],"path":"\/documentation\/swiftnasr\/location","title":"Location","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/offset\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/offset\/direction-swift.property","title":"let direction: Offset.Direction","type":"property"},{"path":"\/documentation\/swiftnasr\/offset\/distance","title":"let distance: UInt","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/offset\/direction-swift.enum\/both","title":"case both","type":"case"},{"path":"\/documentation\/swiftnasr\/offset\/direction-swift.enum\/left","title":"case left","type":"case"},{"path":"\/documentation\/swiftnasr\/offset\/direction-swift.enum\/right","title":"case right","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/offset\/direction-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/offset\/direction-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/offset\/direction-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/offset\/direction-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/offset\/direction-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/offset\/direction-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/offset\/direction-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/offset\/direction-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/offset\/direction-swift.enum","title":"Offset.Direction","type":"enum"}],"path":"\/documentation\/swiftnasr\/offset","title":"Offset","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/remarks\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/remarks\/remarks","title":"var remarks: [Remark<RemarkField>]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/remarks\/append(_:)","title":"func append(Remark<RemarkField>)","type":"method"},{"path":"\/documentation\/swiftnasr\/remarks\/forfield(_:)","title":"func forField(RemarkField) -> Array<Remark<RemarkField>>","type":"method"}],"path":"\/documentation\/swiftnasr\/remarks","title":"Remarks","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/direction\/east","title":"case east","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/eastnortheast","title":"case eastNortheast","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/eastsoutheast","title":"case eastSoutheast","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/north","title":"case north","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/northnortheast","title":"case northNortheast","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/northnorthwest","title":"case northNorthwest","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/northeast","title":"case northeast","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/northwest","title":"case northwest","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/south","title":"case south","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/southsoutheast","title":"case southSoutheast","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/southsouthwest","title":"case southSouthwest","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/southeast","title":"case southeast","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/southwest","title":"case southwest","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/west","title":"case west","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/westnorthwest","title":"case westNorthwest","type":"case"},{"path":"\/documentation\/swiftnasr\/direction\/westsouthwest","title":"case westSouthwest","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/direction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/direction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/direction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/direction\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/direction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/direction\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/direction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/direction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/direction","title":"Direction","type":"enum"}],"path":"\/documentation\/swiftnasr\/records","title":"Records","type":"symbol"},{"children":[{"title":"Associations","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/runways","title":"var runways: [Runway]","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/remarks","title":"var remarks: Remarks<Airport.Field>","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/attendanceschedule","title":"var attendanceSchedule: [AttendanceSchedule]","type":"property"},{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/lid","title":"let LID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/icaoidentifier","title":"let ICAOIdentifier: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.property","title":"let facilityType: Airport.FacilityType","type":"property"},{"title":"Demographics","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.property","title":"let FAARegion: Airport.FAARegion?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/faafieldofficecode","title":"let FAAFieldOfficeCode: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/statecode","title":"let stateCode: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/state","title":"var state: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/county","title":"let county: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/countystatecode","title":"let countyStateCode: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/countystate","title":"var countyState: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/city","title":"let city: String","type":"property"},{"title":"Ownership","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.property","title":"let ownership: Airport.Ownership","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/publicuse","title":"let publicUse: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/owner","title":"var owner: Airport.Person?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/manager","title":"var manager: Airport.Person?","type":"property"},{"title":"Geographics","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/referencepoint","title":"let referencePoint: Location","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/referencepointdeterminationmethod","title":"let referencePointDeterminationMethod: Airport.LocationDeterminationMethod","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/elevationdeterminationmethod","title":"let elevationDeterminationMethod: Airport.LocationDeterminationMethod?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/magneticvariation","title":"let magneticVariation: Int?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/magneticvariationepoch","title":"let magneticVariationEpoch: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/trafficpatternaltitude","title":"let trafficPatternAltitude: Int?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/sectionalchart","title":"let sectionalChart: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/distancecitytoairport","title":"let distanceCityToAirport: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/directioncitytoairport","title":"let directionCityToAirport: Direction?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/landarea","title":"let landArea: Float?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/positionsource","title":"let positionSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/positionsourcedate","title":"let positionSourceDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/elevationsource","title":"let elevationSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/elevationsourcedate","title":"let elevationSourceDate: Date?","type":"property"},{"title":"FAA services","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/boundaryartccid","title":"let boundaryARTCCID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/boundaryartccs","title":"var boundaryARTCCs: Array<ARTCC>?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/responsibleartccid","title":"let responsibleARTCCID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/responsibleartccs","title":"var responsibleARTCCs: Array<ARTCC>?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/tieinfssid","title":"let tieInFSSID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/tieinfss","title":"var tieInFSS: FSS?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/tieinfssonstation","title":"let tieInFSSOnStation: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/alternatefssid","title":"let alternateFSSID: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/alternatefss","title":"var alternateFSS: FSS?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/notamissuerid","title":"let NOTAMIssuerID: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/notamissuer","title":"var NOTAMIssuer: FSS?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/notamdavailable","title":"let NOTAMDAvailable: Bool?","type":"property"},{"title":"Federal status","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/activationdate","title":"let activationDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.property","title":"let status: Airport.Status","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.property","title":"let ARFFCapability: Airport.ARFFCapability?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/agreements","title":"let agreements: Array<Airport.FederalAgreement>","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.property","title":"let airspaceAnalysisDetermination: Airport.AirspaceAnalysisDetermination?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/customsentryairport","title":"let customsEntryAirport: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/customslandingrightsairport","title":"let customsLandingRightsAirport: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/jointuseagreement","title":"let jointUseAgreement: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/militarylandingrights","title":"let militaryLandingRights: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/minimumoperationalnetwork","title":"let minimumOperationalNetwork: Bool","type":"property"},{"title":"Inspection data","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.property","title":"let inspectionMethod: Airport.InspectionMethod?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.property","title":"let inspectionAgency: Airport.InspectionAgency?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/lastphysicalinspectiondate","title":"let lastPhysicalInspectionDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/lastinformationrequestcompleteddate","title":"let lastInformationRequestCompletedDate: Date?","type":"property"},{"title":"Airport services","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fuelsavailable","title":"let fuelsAvailable: Array<Airport.FuelType>","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/airframerepairavailable","title":"let airframeRepairAvailable: Airport.RepairService?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/powerplantrepairavailable","title":"let powerplantRepairAvailable: Airport.RepairService?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/bottledoxygenavailable","title":"let bottledOxygenAvailable: Array<Airport.OxygenPressure>","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/bulkoxygenavailable","title":"let bulkOxygenAvailable: Array<Airport.OxygenPressure>","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/transientstoragefacilities","title":"let transientStorageFacilities: Array<Airport.StorageFacility>?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/otherservices","title":"let otherServices: Array<Airport.Service>","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/contractfuelavailable","title":"let contractFuelAvailable: Bool?","type":"property"},{"title":"Airport facilities","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportlightingschedule","title":"let airportLightingSchedule: Airport.LightingSchedule?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/beaconlightingschedule","title":"let beaconLightingSchedule: Airport.LightingSchedule?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/controltower","title":"let controlTower: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/unicomfrequency","title":"let UNICOMFrequency: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/ctaf","title":"let CTAF: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/segmentedcircle","title":"let segmentedCircle: Airport.AirportMarker?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/beaconcolor","title":"let beaconColor: Airport.LensColor?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/landingfee","title":"let landingFee: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/medicaluse","title":"let medicalUse: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/windindicator","title":"let windIndicator: Airport.AirportMarker?","type":"property"},{"title":"Based aircraft","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/basedsingleenginega","title":"let basedSingleEngineGA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/basedmultienginega","title":"let basedMultiEngineGA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/basedjetga","title":"let basedJetGA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/basedhelicopterga","title":"let basedHelicopterGA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/basedoperationalgliders","title":"let basedOperationalGliders: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/basedoperationalmilitary","title":"let basedOperationalMilitary: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/basedultralights","title":"let basedUltralights: UInt?","type":"property"},{"title":"Annual operations","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/annualcommercialops","title":"let annualCommercialOps: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/annualcommuterops","title":"let annualCommuterOps: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/annualairtaxiops","title":"let annualAirTaxiOps: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/annuallocalgaops","title":"let annualLocalGAOps: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/annualtransientgaops","title":"let annualTransientGAOps: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/annualmilitaryops","title":"let annualMilitaryOps: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/annualperiodenddate","title":"let annualPeriodEndDate: Date?","type":"property"},{"title":"Associated record classes","type":"groupMarker"},{"children":[{"title":"Associations","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/baseend","title":"let baseEnd: RunwayEnd","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/reciprocalend","title":"let reciprocalEnd: RunwayEnd?","type":"property"},{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/identification","title":"let identification: String","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/remarks","title":"var remarks: Remarks<Runway.Field>","type":"property"},{"title":"Dimensions","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/length","title":"let length: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/width","title":"let width: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/lengthsource","title":"let lengthSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/lengthsourcedate","title":"let lengthSourceDate: Date?","type":"property"},{"title":"Construction","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/materials","title":"let materials: Set<Runway.Material>","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.property","title":"let condition: Runway.Condition?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.property","title":"let treatment: Runway.Treatment?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.property","title":"let pavementClassification: Runway.PavementClassification?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/ispaved","title":"var isPaved: Bool","type":"property"},{"title":"Lighting","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightsintensity","title":"let edgeLightsIntensity: Runway.EdgeLightIntensity?","type":"property"},{"title":"Weight capacity","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/singlewheelweightbearingcapacity","title":"let singleWheelWeightBearingCapacity: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/dualwheelweightbearingcapacity","title":"let dualWheelWeightBearingCapacity: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/tandemdualwheelweightbearingcapacity","title":"let tandemDualWheelWeightBearingCapacity: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/doubletandemdualwheelweightbearingcapacity","title":"let doubleTandemDualWheelWeightBearingCapacity: UInt?","type":"property"},{"title":"Associated records","type":"groupMarker"},{"children":[{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/id","title":"let ID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/remarks","title":"var remarks: Remarks<RunwayEnd.Field>","type":"property"},{"title":"Dimensions and geographics","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/trueheading","title":"let trueHeading: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglidepath","title":"let visualGlidepath: Float?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/gradient","title":"let gradient: Float?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahso","title":"var LAHSO: RunwayEnd.LAHSOPoint?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.property","title":"var controllingObject: RunwayEnd.ControllingObject?","type":"property"},{"title":"Position","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/threshold","title":"let threshold: Location?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/positionsource","title":"let positionSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/positionsourcedate","title":"let positionSourceDate: Date?","type":"property"},{"title":"Elevation","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/thresholdcrossingheight","title":"let thresholdCrossingHeight: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/touchdownzoneelevation","title":"let touchdownZoneElevation: Float?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/elevationsource","title":"let elevationSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/elevationsourcedate","title":"let elevationSourceDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/touchdownzoneelevationsource","title":"let touchdownZoneElevationSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/touchdownzoneelevationsourcedate","title":"let touchdownZoneElevationSourceDate: Date?","type":"property"},{"title":"Displaced threshold","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/displacedthreshold","title":"let displacedThreshold: Location?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/thresholddisplacement","title":"let thresholdDisplacement: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/displacedthresholdpositionsource","title":"let displacedThresholdPositionSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/displacedthresholdpositionsourcedate","title":"let displacedThresholdPositionSourceDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/displacedthresholdelevationsource","title":"let displacedThresholdElevationSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/displacedthresholdelevationsourcedate","title":"let displacedThresholdElevationSourceDate: Date?","type":"property"},{"title":"Declared distances","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/tora","title":"let TORA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/toda","title":"let TODA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/asda","title":"let ASDA: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lda","title":"let LDA: UInt?","type":"property"},{"title":"Equipment","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.property","title":"let instrumentLandingSystem: RunwayEnd.InstrumentLandingSystem?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.property","title":"let visualGlideslopeIndicator: RunwayEnd.VisualGlideslopeIndicator?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensors","title":"let RVRSensors: Array<RunwayEnd.RVRSensor>","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/hasrvv","title":"let hasRVV: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/arrestingsystems","title":"var arrestingSystems: [String]","type":"property"},{"title":"Lighting","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.property","title":"let approachLighting: RunwayEnd.ApproachLighting?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/hasreil","title":"let hasREIL: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/hascenterlinelighting","title":"let hasCenterlineLighting: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/endtouchdownlighting","title":"let endTouchdownLighting: Bool?","type":"property"},{"title":"Traffic pattern","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/righttraffic","title":"let rightTraffic: Bool?","type":"property"},{"title":"Markings","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.property","title":"let marking: RunwayEnd.Marking?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.property","title":"let markingCondition: RunwayEnd.MarkingCondition?","type":"property"},{"title":"Associated types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/number","title":"let number: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.property","title":"let side: RunwayEnd.VisualGlideslopeIndicator.Side?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/type","title":"let type: RunwayEnd.VisualGlideslopeIndicator.Classification","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/papi","title":"case PAPI","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/savasi","title":"case SAVASI","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/vasi","title":"case VASI","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/nonspecificvasi","title":"case nonspecificVASI","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/nonstandard","title":"case nonstandard","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/panels","title":"case panels","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/private","title":"case `private`","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/pulsatingvasi","title":"case pulsatingVASI","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/tricolorvasi","title":"case tricolorVASI","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/classification","title":"RunwayEnd.VisualGlideslopeIndicator.Classification","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/both","title":"case both","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/left","title":"case left","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/right","title":"case right","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct\/side-swift.enum","title":"RunwayEnd.VisualGlideslopeIndicator.Side","type":"enum"}],"path":"\/documentation\/swiftnasr\/runwayend\/visualglideslopeindicator-swift.struct","title":"RunwayEnd.VisualGlideslopeIndicator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.property","title":"let category: RunwayEnd.ControllingObject.Category","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/clearanceslope","title":"let clearanceSlope: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/distancefromrunway","title":"let distanceFromRunway: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/heightaboverunway","title":"let heightAboveRunway: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/markings","title":"let markings: Array<RunwayEnd.ControllingObject.Marking>","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/offsetfromcenterline","title":"let offsetFromCenterline: Offset?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/remarks","title":"var remarks: Remarks<RunwayEnd.ControllingObject.Field>","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/runwaycategory","title":"let runwayCategory: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/aircraft","title":"case aircraft","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/antenna","title":"case antenna","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/berm","title":"case berm","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/boat","title":"case boat","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/bridge","title":"case bridge","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/brush","title":"case brush","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/building","title":"case building","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/crops","title":"case crops","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/fence","title":"case fence","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/hangar","title":"case hangar","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/hill","title":"case hill","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/light","title":"case light","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/other(_:)","title":"case other(String?)","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/pole","title":"case pole","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/railroad","title":"case railroad","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/road","title":"case road","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/sign","title":"case sign","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/stack","title":"case stack","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/tank","title":"case tank","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/terrain","title":"case terrain","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/tower","title":"case tower","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/tree","title":"case tree","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/trees","title":"case trees","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/utilityline","title":"case utilityLine","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/init(from:)-122tn","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/rawvalue-swift.property","title":"var rawValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/rawvalue-swift.typealias","title":"RunwayEnd.ControllingObject.Category.RawValue","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/init(from:)-8uw5o","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/category-swift.enum","title":"RunwayEnd.ControllingObject.Category","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/category","title":"case category","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/clearanceslope","title":"case clearanceSlope","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/distancefromrunway","title":"case distanceFromRunway","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/heightaboverunway","title":"case heightAboveRunway","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/markings","title":"case markings","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/offsetfromcenterline","title":"case offsetFromCenterline","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/runwaycategory","title":"case runwayCategory","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/field","title":"RunwayEnd.ControllingObject.Field","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/lighted","title":"case lighted","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/marked","title":"case marked","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct\/marking","title":"RunwayEnd.ControllingObject.Marking","type":"enum"}],"path":"\/documentation\/swiftnasr\/runwayend\/controllingobject-swift.struct","title":"RunwayEnd.ControllingObject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/availabledistance","title":"let availableDistance: UInt","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/definingentity","title":"let definingEntity: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/intersectingrunway","title":"var intersectingRunway: Runway?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/intersectingrunwayid","title":"let intersectingRunwayID: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/position","title":"let position: Location?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/positionsource","title":"let positionSource: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/positionsourcedate","title":"let positionSourceDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/remarks","title":"var remarks: Remarks<RunwayEnd.LAHSOPoint.Field>","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/availabledistance","title":"case availableDistance","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/definingentity","title":"case definingEntity","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/intersectingrunwayid","title":"case intersectingRunwayID","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/position","title":"case position","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/positionsource","title":"case positionSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/positionsourcedate","title":"case positionSourceDate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint\/field","title":"RunwayEnd.LAHSOPoint.Field","type":"enum"}],"path":"\/documentation\/swiftnasr\/runwayend\/lahsopoint","title":"RunwayEnd.LAHSOPoint","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/ils","title":"case ILS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/ils_dme","title":"case ILS_DME","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/lda","title":"case LDA","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/lda_dme","title":"case LDA_DME","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/loc_dme","title":"case LOC_DME","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/mls","title":"case MLS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/sdf","title":"case SDF","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/sdf_dme","title":"case SDF_DME","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/interimstandardmls","title":"case interimStandardMLS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/localizer","title":"case localizer","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/instrumentlandingsystem-swift.enum","title":"RunwayEnd.InstrumentLandingSystem","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/stol","title":"case STOL","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/basic","title":"case basic","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/buoys","title":"case buoys","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/nonprecisioninstrument","title":"case nonprecisionInstrument","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/nonstandard","title":"case nonstandard","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/numbers","title":"case numbers","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/precisioninstrument","title":"case precisionInstrument","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/marking-swift.enum","title":"RunwayEnd.Marking","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/fair","title":"case fair","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/good","title":"case good","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/poor","title":"case poor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/markingcondition-swift.enum","title":"RunwayEnd.MarkingCondition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/midpoint","title":"case midpoint","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/rollout","title":"case rollout","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/touchdown","title":"case touchdown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/rvrsensor","title":"RunwayEnd.RVRSensor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/alsaf","title":"case ALSAF","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/alsf","title":"case ALSF","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/alsf1","title":"case ALSF1","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/alsf2","title":"case ALSF2","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/mals","title":"case MALS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/malsf","title":"case MALSF","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/malsr","title":"case MALSR","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/odals","title":"case ODALS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/rail","title":"case RAIL","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/rlls","title":"case RLLS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/ssalf","title":"case SSALF","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/ssalr","title":"case SSALR","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/ssals","title":"case SSALS","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/militaryoverrun","title":"case militaryOverrun","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/neonladder","title":"case neonLadder","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/nonstandard","title":"case nonstandard","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/approachlighting-swift.enum","title":"RunwayEnd.ApproachLighting","type":"enum"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/asda","title":"case ASDA","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/id","title":"case ID","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/lahso","title":"case LAHSO","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/lda","title":"case LDA","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/rvrsensors","title":"case RVRSensors","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/toda","title":"case TODA","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/tora","title":"case TORA","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/approachlighting","title":"case approachLighting","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/arrestingsystems","title":"case arrestingSystems","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/controllingobject","title":"case controllingObject","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/displacedthreshold","title":"case displacedThreshold","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/displacedthresholdelevationsource","title":"case displacedThresholdElevationSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/displacedthresholdelevationsourcedate","title":"case displacedThresholdElevationSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/displacedthresholdpositionsource","title":"case displacedThresholdPositionSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/displacedthresholdpositionsourcedate","title":"case displacedThresholdPositionSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/elevationsource","title":"case elevationSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/elevationsourcedate","title":"case elevationSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/endtouchdownlighting","title":"case endTouchdownLighting","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/gradient","title":"case gradient","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/hascenterlinelighting","title":"case hasCenterlineLighting","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/hasreil","title":"case hasREIL","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/hasrvv","title":"case hasRVV","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/instrumentlandingsystem","title":"case instrumentLandingSystem","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/marking","title":"case marking","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/markingcondition","title":"case markingCondition","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/positionsource","title":"case positionSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/positionsourcedate","title":"case positionSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/righttraffic","title":"case rightTraffic","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/threshold","title":"case threshold","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/thresholdcrossingheight","title":"case thresholdCrossingHeight","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/thresholddisplacement","title":"case thresholdDisplacement","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/touchdownzoneelevation","title":"case touchdownZoneElevation","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/touchdownzoneelevationsource","title":"case touchdownZoneElevationSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/touchdownzoneelevationsourcedate","title":"case touchdownZoneElevationSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/trueheading","title":"case trueHeading","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/visualglidepath","title":"case visualGlidepath","type":"case"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/visualglideslopeindicator","title":"case visualGlideslopeIndicator","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runwayend\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runwayend\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runwayend\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runwayend\/field","title":"RunwayEnd.Field","type":"enum"}],"path":"\/documentation\/swiftnasr\/runwayend","title":"RunwayEnd","type":"class"},{"title":"Associated types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.property","title":"let determinationMethod: Runway.PavementClassification.DeterminationMethod","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/number","title":"let number: UInt","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.property","title":"let subgradeStrengthCategory: Runway.PavementClassification.SubgradeStrengthCategory","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.property","title":"let tirePressureLimit: Runway.PavementClassification.TirePressureLimit","type":"property"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/type","title":"let type: Runway.PavementClassification.Classification","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/flexible","title":"case flexible","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/rigid","title":"case rigid","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/classification","title":"Runway.PavementClassification.Classification","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/aircraft","title":"case aircraft","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/technical","title":"case technical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/determinationmethod-swift.enum","title":"Runway.PavementClassification.DeterminationMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/ultralow","title":"case ultralow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/subgradestrengthcategory-swift.enum","title":"Runway.PavementClassification.SubgradeStrengthCategory","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/unlimited","title":"case unlimited","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct\/tirepressurelimit-swift.enum","title":"Runway.PavementClassification.TirePressureLimit","type":"enum"}],"path":"\/documentation\/swiftnasr\/runway\/pavementclassification-swift.struct","title":"Runway.PavementClassification","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/material\/asphalt","title":"case asphalt","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/brick","title":"case brick","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/concrete","title":"case concrete","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/deck","title":"case deck","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/dirt","title":"case dirt","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/gradedorrolledearth","title":"case gradedOrRolledEarth","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/gravel","title":"case gravel","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/ice","title":"case ice","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/metal","title":"case metal","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/nonstandard","title":"case nonstandard","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/partiallyconcreteorasphalt","title":"case partiallyConcreteOrAsphalt","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/piercedsteel","title":"case piercedSteel","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/roof","title":"case roof","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/sand","title":"case sand","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/snow","title":"case snow","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/treated","title":"case treated","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/turf","title":"case turf","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/water","title":"case water","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/material\/wood","title":"case wood","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/material\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/material\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/material\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/material\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/material\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/material\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/material\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/material\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/material","title":"Runway.Material","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/excellent","title":"case excellent","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/fair","title":"case fair","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/good","title":"case good","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/poor","title":"case poor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/condition-swift.enum","title":"Runway.Condition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/afsc","title":"case AFSC","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/pfc","title":"case PFC","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/rfsc","title":"case RFSC","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/grooved","title":"case grooved","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/wirecomb","title":"case wireComb","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/treatment-swift.enum","title":"Runway.Treatment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/flood","title":"case flood","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/nonstandard","title":"case nonstandard","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/perimeter","title":"case perimeter","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/strobe","title":"case strobe","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/edgelightintensity","title":"Runway.EdgeLightIntensity","type":"enum"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/field\/baseend","title":"case baseEnd","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/condition","title":"case condition","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/doubletandemdualwheelweightbearingcapacity","title":"case doubleTandemDualWheelWeightBearingCapacity","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/dualwheelweightbearingcapacity","title":"case dualWheelWeightBearingCapacity","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/edgelightsintensity","title":"case edgeLightsIntensity","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/identification","title":"case identification","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/length","title":"case length","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/lengthsource","title":"case lengthSource","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/lengthsourcedate","title":"case lengthSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/materials","title":"case materials","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/pavementclassification","title":"case pavementClassification","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/reciprocalend","title":"case reciprocalEnd","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/singlewheelweightbearingcapacity","title":"case singleWheelWeightBearingCapacity","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/tandemdualwheelweightbearingcapacity","title":"case tandemDualWheelWeightBearingCapacity","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/treatment","title":"case treatment","type":"case"},{"path":"\/documentation\/swiftnasr\/runway\/field\/width","title":"case width","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/runway\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/runway\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/runway\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/runway\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/runway\/field","title":"Runway.Field","type":"enum"}],"path":"\/documentation\/swiftnasr\/runway","title":"Runway","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/attendanceschedule\/components(monthly:daily:hourly:)","title":"case components(monthly: String, daily: String, hourly: String)","type":"case"},{"path":"\/documentation\/swiftnasr\/attendanceschedule\/custom(_:)","title":"case custom(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/attendanceschedule\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/attendanceschedule\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/swiftnasr\/attendanceschedule","title":"AttendanceSchedule","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/remark\/field(field:content:)","title":"case field(field: RemarkField, content: String)","type":"case"},{"path":"\/documentation\/swiftnasr\/remark\/fuel(field:fuel:content:)","title":"case fuel(field: RemarkField, fuel: Airport.FuelType, content: String)","type":"case"},{"path":"\/documentation\/swiftnasr\/remark\/general(_:)","title":"case general(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/remark\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/remark\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/swiftnasr\/remark","title":"Remark","type":"enum"},{"title":"Associated types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/address1","title":"let address1: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/person\/address2","title":"let address2: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/person\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/person\/phone","title":"let phone: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/person\/remarks","title":"var remarks: Remarks<Airport.Person.Field>","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/address1","title":"case address1","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/address2","title":"case address2","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/name","title":"case name","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/phone","title":"case phone","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/person\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/person\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/person\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/person\/field","title":"Airport.Person.Field","type":"enum"}],"path":"\/documentation\/swiftnasr\/airport\/person","title":"Airport.Person","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/airport","title":"case airport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/balloonport","title":"case balloonport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/gliderport","title":"case gliderport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/heliport","title":"case heliport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/seaport","title":"case seaport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/ultralight","title":"case ultralight","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/facilitytype-swift.enum","title":"Airport.FacilityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/alaska","title":"case alaska","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/central","title":"case central","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/eastern","title":"case eastern","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/greatlakes","title":"case greatLakes","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/international","title":"case international","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/newengland","title":"case newEngland","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/northwestmountain","title":"case northwestMountain","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/southern","title":"case southern","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/southwest","title":"case southwest","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/westernpacific","title":"case westernPacific","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/faaregion-swift.enum","title":"Airport.FAARegion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/usaf","title":"case USAF","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/usarmy","title":"case USArmy","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/uscg","title":"case USCG","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/usn","title":"case USN","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/private","title":"case `private`","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/public","title":"case `public`","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/ownership-swift.enum","title":"Airport.Ownership","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/estimated","title":"case estimated","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/surveyed","title":"case surveyed","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/locationdeterminationmethod","title":"Airport.LocationDeterminationMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/closedindefinitely","title":"case closedIndefinitely","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/closedpermanently","title":"case closedPermanently","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/operational","title":"case operational","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/status-swift.enum","title":"Airport.Status","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/faapadvanceplanning","title":"case FAAPAdvancePlanning","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/fande","title":"case FandE","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/npias","title":"case NPIAS","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/accessibilitycompliance","title":"case accessibilityCompliance","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/civilrightsactassurances","title":"case civilRightsActAssurances","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/conveyancefaa16_23","title":"case conveyanceFAA16_23","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/conveyancefaa303c","title":"case conveyanceFAA303C","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/expired303cauthority","title":"case expired303CAuthority","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/expiredap4agreement","title":"case expiredAP4Agreement","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/expiredgrantagreement","title":"case expiredGrantAgreement","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/grantagreements","title":"case grantAgreements","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/surpluspubliclaw289","title":"case surplusPublicLaw289","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/surplusregulation16waa","title":"case surplusRegulation16WAA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/transferobligations","title":"case transferObligations","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown0","title":"case unknown0","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown4","title":"case unknown4","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown5","title":"case unknown5","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown6","title":"case unknown6","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown7","title":"case unknown7","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown8","title":"case unknown8","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknown9","title":"case unknown9","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknowna","title":"case unknownA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknowne","title":"case unknownE","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknownl","title":"case unknownL","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknownm","title":"case unknownM","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/unknowno","title":"case unknownO","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/federalagreement\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/federalagreement","title":"Airport.FederalAgreement","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/conditional","title":"case conditional","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/noobjection","title":"case noObjection","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/notanalyzed","title":"case notAnalyzed","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/objectionable","title":"case objectionable","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/airspaceanalysisdetermination-swift.enum","title":"Airport.AirspaceAnalysisDetermination","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/contractor","title":"case contractor","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/federal","title":"case federal","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/privateusemailout","title":"case privateUseMailout","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/publicusemailout","title":"case publicUseMailout","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/state","title":"case state","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/inspectionmethod-swift.enum","title":"Airport.InspectionMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/faapersonnel","title":"case FAAPersonnel","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/contractpersonnel","title":"case contractPersonnel","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/owner","title":"case owner","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/statepersonnel","title":"case statePersonnel","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/inspectionagency-swift.enum","title":"Airport.InspectionAgency","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/j8plus100","title":"case J8Plus100","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jp4","title":"case JP4","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jp5","title":"case JP5","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jp8","title":"case JP8","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/avgas100","title":"case avgas100","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/avgas100ll","title":"case avgas100LL","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/avgas115","title":"case avgas115","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/avgas80","title":"case avgas80","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/avgasul91","title":"case avgasUL91","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/avgasul94","title":"case avgasUL94","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jeta","title":"case jetA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jeta1","title":"case jetA1","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jeta1plus","title":"case jetA1Plus","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jetaplus","title":"case jetAPlus","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jetaplusplus","title":"case jetAPlusPlus","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jetaplusplus100","title":"case jetAPlusPlus100","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jetb","title":"case jetB","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jetbplus","title":"case jetBPlus","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/jetgeneric","title":"case jetGeneric","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/mogas","title":"case mogas","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/fueltype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/fueltype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/fueltype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/fueltype","title":"Airport.FuelType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/major","title":"case major","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/minor","title":"case minor","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/repairservice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/repairservice\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/repairservice\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/repairservice","title":"Airport.RepairService","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/oxygenpressure","title":"Airport.OxygenPressure","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/buoys","title":"case buoys","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/hangars","title":"case hangars","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/tiedowns","title":"case tiedowns","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/storagefacility\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/storagefacility","title":"Airport.StorageFacility","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/service\/airambulance","title":"case airAmbulance","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/airfreight","title":"case airFreight","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/aircraftrental","title":"case aircraftRental","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/aircraftsales","title":"case aircraftSales","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/annualsurveying","title":"case annualSurveying","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/avionics","title":"case avionics","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/beachinggear","title":"case beachingGear","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/cargohandling","title":"case cargoHandling","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/charter","title":"case charter","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/cropdusting","title":"case cropDusting","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/glider","title":"case glider","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/glidertowing","title":"case gliderTowing","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/parachutejumping","title":"case parachuteJumping","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/service\/pilotinstruction","title":"case pilotInstruction","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/service\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/service\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/service\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/service\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/service\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/service\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/service\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/service\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/service","title":"Airport.Service","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/seeremarks","title":"case seeRemarks","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/sunsetsunrise","title":"case sunsetSunrise","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/unlighted","title":"case unlighted","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/lightingschedule\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/lightingschedule","title":"Airport.LightingSchedule","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/lighted","title":"case lighted","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/none","title":"case none","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/unlighted","title":"case unlighted","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/airportmarker\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/airportmarker","title":"Airport.AirportMarker","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/clear","title":"case clear","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/cleargreen","title":"case clearGreen","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/cleargreenyellow","title":"case clearGreenYellow","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/clearyellow","title":"case clearYellow","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/green","title":"case green","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/none","title":"case none","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/splitcleargreen","title":"case splitClearGreen","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/yellow","title":"case yellow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/lenscolor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/lenscolor","title":"Airport.LensColor","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.property","title":"let airService: Airport.ARFFCapability.AirService","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/certificationdate","title":"let certificationDate: Date","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.property","title":"let `class`: Airport.ARFFCapability.Class","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.property","title":"let index: Airport.ARFFCapability.Index","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/scheduled","title":"case scheduled","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/unscheduled","title":"case unscheduled","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/airservice-swift.enum","title":"Airport.ARFFCapability.AirService","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/i","title":"case I","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/ii","title":"case II","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/iii","title":"case III","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/iv","title":"case IV","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/class-swift.enum","title":"Airport.ARFFCapability.Class","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/a","title":"case A","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/b","title":"case B","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/c","title":"case C","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/d","title":"case D","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/e","title":"case E","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/limited","title":"case limited","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct\/index-swift.enum","title":"Airport.ARFFCapability.Index","type":"enum"}],"path":"\/documentation\/swiftnasr\/airport\/arffcapability-swift.struct","title":"Airport.ARFFCapability","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/==(_:_:)","title":"static func == (Airport, Airport) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/id-3kxuq","title":"var id: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/arffcapability","title":"case ARFFCapability","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/ctaf","title":"case CTAF","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/faafieldofficecode","title":"case FAAFieldOfficeCode","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/faaregion","title":"case FAARegion","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/icaoidentifier","title":"case ICAOIdentifier","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/lid","title":"case LID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/notamdavailable","title":"case NOTAMDAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/notamissuerid","title":"case NOTAMIssuerID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/unicomfrequency","title":"case UNICOMFrequency","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/activationdate","title":"case activationDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/agreements","title":"case agreements","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/airframerepairavailable","title":"case airframeRepairAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/airportlightingschedule","title":"case airportLightingSchedule","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/airspaceanalysisdetermination","title":"case airspaceAnalysisDetermination","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/alternatefssid","title":"case alternateFSSID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annualairtaxiops","title":"case annualAirTaxiOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annualcommercialops","title":"case annualCommercialOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annualcommuterops","title":"case annualCommuterOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annuallocalgaops","title":"case annualLocalGAOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annualmilitaryops","title":"case annualMilitaryOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annualperiodenddate","title":"case annualPeriodEndDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/annualtransientgaops","title":"case annualTransientGAOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/attendanceschedule","title":"case attendanceSchedule","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedhelicopterga","title":"case basedHelicopterGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedjetga","title":"case basedJetGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedmultienginega","title":"case basedMultiEngineGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedoperationalgliders","title":"case basedOperationalGliders","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedoperationalmilitary","title":"case basedOperationalMilitary","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedsingleenginega","title":"case basedSingleEngineGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/basedultralights","title":"case basedUltralights","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/beaconcolor","title":"case beaconColor","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/beaconlightingschedule","title":"case beaconLightingSchedule","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/bottledoxygenavailable","title":"case bottledOxygenAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/boundaryartccid","title":"case boundaryARTCCID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/bulkoxygenavailable","title":"case bulkOxygenAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/city","title":"case city","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/contractfuelavailable","title":"case contractFuelAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/controltower","title":"case controlTower","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/county","title":"case county","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/countystatecode","title":"case countyStateCode","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/customsentryairport","title":"case customsEntryAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/customslandingrightsairport","title":"case customsLandingRightsAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/directioncitytoairport","title":"case directionCityToAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/distancecitytoairport","title":"case distanceCityToAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/elevationdeterminationmethod","title":"case elevationDeterminationMethod","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/elevationsource","title":"case elevationSource","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/elevationsourcedate","title":"case elevationSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/facilitytype","title":"case facilityType","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/fuelsavailable","title":"case fuelsAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/inspectionagency","title":"case inspectionAgency","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/inspectionmethod","title":"case inspectionMethod","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/jointuseagreement","title":"case jointUseAgreement","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/landarea","title":"case landArea","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/landingfee","title":"case landingFee","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/lastinformationrequestcompleteddate","title":"case lastInformationRequestCompletedDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/lastphysicalinspectiondate","title":"case lastPhysicalInspectionDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/magneticvariation","title":"case magneticVariation","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/magneticvariationepoch","title":"case magneticVariationEpoch","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/manager","title":"case manager","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/medicaluse","title":"case medicalUse","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/militarylandingrights","title":"case militaryLandingRights","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/minimumoperationalnetwork","title":"case minimumOperationalNetwork","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/otherservices","title":"case otherServices","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/owner","title":"case owner","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/ownership","title":"case ownership","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/positionsource","title":"case positionSource","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/positionsourcedate","title":"case positionSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/powerplantrepairavailable","title":"case powerplantRepairAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/publicuse","title":"case publicUse","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/referencepoint","title":"case referencePoint","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/referencepointdeterminationmethod","title":"case referencePointDeterminationMethod","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/remarks","title":"case remarks","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/responsibleartccid","title":"case responsibleARTCCID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/runways","title":"case runways","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/sectionalchart","title":"case sectionalChart","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/segmentedcircle","title":"case segmentedCircle","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/statecode","title":"case stateCode","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/tieinfssid","title":"case tieInFSSID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/tieinfssonstation","title":"case tieInFSSOnStation","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/trafficpatternaltitude","title":"case trafficPatternAltitude","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/transientstoragefacilities","title":"case transientStorageFacilities","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/windindicator","title":"case windIndicator","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/codingkeys","title":"Airport.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/field\/arffcapability","title":"case ARFFCapability","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/ctaf","title":"case CTAF","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/faafieldofficecode","title":"case FAAFieldOfficeCode","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/faaregion","title":"case FAARegion","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/icaoidentifier","title":"case ICAOIdentifier","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/lid","title":"case LID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/notamdavailable","title":"case NOTAMDAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/notamissuerid","title":"case NOTAMIssuerID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/unicomfrequency","title":"case UNICOMFrequency","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/activationdate","title":"case activationDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/agreements","title":"case agreements","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/airframerepairavailable","title":"case airframeRepairAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/airportlightingschedule","title":"case airportLightingSchedule","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/airspaceanalysisdetermination","title":"case airspaceAnalysisDetermination","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/alternatefssid","title":"case alternateFSSID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annualairtaxiops","title":"case annualAirTaxiOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annualcommercialops","title":"case annualCommercialOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annualcommuterops","title":"case annualCommuterOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annuallocalgaops","title":"case annualLocalGAOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annualmilitaryops","title":"case annualMilitaryOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annualperiodenddate","title":"case annualPeriodEndDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/annualtransientgaops","title":"case annualTransientGAOps","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/attendanceschedule","title":"case attendanceSchedule","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedhelicopterga","title":"case basedHelicopterGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedjetga","title":"case basedJetGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedmultienginega","title":"case basedMultiEngineGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedoperationalgliders","title":"case basedOperationalGliders","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedoperationalmilitary","title":"case basedOperationalMilitary","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedsingleenginega","title":"case basedSingleEngineGA","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/basedultralights","title":"case basedUltralights","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/beaconcolor","title":"case beaconColor","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/beaconlightingschedule","title":"case beaconLightingSchedule","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/bottledoxygenavailable","title":"case bottledOxygenAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/boundaryartccid","title":"case boundaryARTCCID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/bulkoxygenavailable","title":"case bulkOxygenAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/city","title":"case city","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/contractfuelavailable","title":"case contractFuelAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/controltower","title":"case controlTower","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/county","title":"case county","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/countystatecode","title":"case countyStateCode","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/customsentryairport","title":"case customsEntryAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/customslandingrightsairport","title":"case customsLandingRightsAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/directioncitytoairport","title":"case directionCityToAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/distancecitytoairport","title":"case distanceCityToAirport","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/elevationdeterminationmethod","title":"case elevationDeterminationMethod","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/elevationsource","title":"case elevationSource","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/elevationsourcedate","title":"case elevationSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/facilitytype","title":"case facilityType","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/fuelsavailable","title":"case fuelsAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/id","title":"case id","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/inspectionagency","title":"case inspectionAgency","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/inspectionmethod","title":"case inspectionMethod","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/jointuseagreement","title":"case jointUseAgreement","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/landarea","title":"case landArea","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/landingfee","title":"case landingFee","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/lastinformationrequestcompleteddate","title":"case lastInformationRequestCompletedDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/lastphysicalinspectiondate","title":"case lastPhysicalInspectionDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/magneticvariation","title":"case magneticVariation","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/magneticvariationepoch","title":"case magneticVariationEpoch","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/manager","title":"case manager","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/medicaluse","title":"case medicalUse","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/militarylandingrights","title":"case militaryLandingRights","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/minimumoperationalnetwork","title":"case minimumOperationalNetwork","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/name","title":"case name","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/otherservices","title":"case otherServices","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/owner","title":"case owner","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/ownership","title":"case ownership","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/positionsource","title":"case positionSource","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/positionsourcedate","title":"case positionSourceDate","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/powerplantrepairavailable","title":"case powerplantRepairAvailable","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/publicuse","title":"case publicUse","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/referencepoint","title":"case referencePoint","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/referencepointdeterminationmethod","title":"case referencePointDeterminationMethod","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/responsibleartccid","title":"case responsibleARTCCID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/sectionalchart","title":"case sectionalChart","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/segmentedcircle","title":"case segmentedCircle","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/statecode","title":"case stateCode","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/status","title":"case status","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/tieinfssid","title":"case tieInFSSID","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/tieinfssonstation","title":"case tieInFSSOnStation","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/trafficpatternaltitude","title":"case trafficPatternAltitude","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/transientstoragefacilities","title":"case transientStorageFacilities","type":"case"},{"path":"\/documentation\/swiftnasr\/airport\/field\/windindicator","title":"case windIndicator","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/airport\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/airport\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport\/field","title":"Airport.Field","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/airport\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/airport\/id-8m06u","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/swiftnasr\/airport\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/airport","title":"Airport","type":"class"},{"children":[{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/id","title":"let ID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/icaoid","title":"let ICAOID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/type","title":"let type: ARTCC.FacilityType","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/alternatename","title":"let alternateName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/remarks","title":"var remarks: Remarks<ARTCC.Field>","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/frequencies","title":"var frequencies: Array<ARTCC.CommFrequency>","type":"property"},{"title":"Location","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/locationname","title":"let locationName: String","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/statecode","title":"let stateCode: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/state","title":"var state: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/location","title":"let location: Location?","type":"property"},{"title":"Associated types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/arsr","title":"case ARSR","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/artcc","title":"case ARTCC","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/cerap","title":"case CERAP","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/rcag","title":"case RCAG","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/secra","title":"case SECRA","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/artcc\/facilitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/artcc\/facilitytype","title":"ARTCC.FacilityType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.property","title":"let altitude: Array<ARTCC.CommFrequency.Altitude>","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/associatedairport","title":"var associatedAirport: Airport?","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/associatedairportcode","title":"var associatedAirportCode: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/frequency","title":"let frequency: UInt","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/remarks","title":"var remarks: Remarks<ARTCC.CommFrequency.Field>","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/remoteoutletfrequencycharted","title":"let remoteOutletFrequencyCharted: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/specialusagename","title":"let specialUsageName: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/ultrahigh","title":"case ultraHigh","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/altitude-swift.enum","title":"ARTCC.CommFrequency.Altitude","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/altitude","title":"case altitude","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/associatedairportcode","title":"case associatedAirportCode","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/specialusagename","title":"case specialUsageName","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency\/field","title":"ARTCC.CommFrequency.Field","type":"enum"}],"path":"\/documentation\/swiftnasr\/artcc\/commfrequency","title":"ARTCC.CommFrequency","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/==(_:_:)","title":"static func == (ARTCC, ARTCC) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/alternatename","title":"case alternateName","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/location","title":"case location","type":"case"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/statecode","title":"case stateCode","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/artcc\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/artcc\/field\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/artcc\/field\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/artcc\/field","title":"ARTCC.Field","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/artcc\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/artcc\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/artcc","title":"ARTCC","type":"class"},{"children":[{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/id","title":"let ID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/radioidentifier","title":"let radioIdentifier: String?","type":"property"},{"title":"Basic info","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/type","title":"let type: FSS.FSSType","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/hoursofoperation","title":"let hoursOfOperation: String","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.property","title":"let status: FSS.Status?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/lowaltenroutechartnumber","title":"let lowAltEnrouteChartNumber: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/phonenumber","title":"let phoneNumber: String?","type":"property"},{"title":"Communications","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequencies","title":"let frequencies: Array<FSS.Frequency>","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacilities","title":"var commFacilities: Array<FSS.CommFacility>","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/outlets","title":"var outlets: Array<FSS.Outlet>","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/navaids","title":"var navaids: Array<FSS.Navaid>","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/airportadvisoryfrequencies","title":"let airportAdvisoryFrequencies: Array<FSS.Frequency>","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/volmets","title":"let VOLMETs: Array<FSS.VOLMET>","type":"property"},{"title":"Operator info","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/owner","title":"let owner: FSS.Operator?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/ownername","title":"let ownerName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.property","title":"let `operator`: FSS.Operator","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/operatorname","title":"let operatorName: String?","type":"property"},{"title":"Capabilities","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/hasweatherradar","title":"let hasWeatherRadar: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/hasefas","title":"let hasEFAS: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/flightwatchavailability","title":"let flightWatchAvailability: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/dfequipment","title":"let DFEquipment: FSS.DirectionFindingEquipment?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/nearestfsswithteletype","title":"var nearestFSSWithTeletype: FSS?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/nearestfssidwithteletype","title":"let nearestFSSIDWithTeletype: String?","type":"property"},{"title":"Location","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/airport","title":"var airport: Airport?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/airportid","title":"let airportID: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/city","title":"let city: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/statename","title":"let stateName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/state","title":"var state: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/region","title":"let region: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/location","title":"let location: Location?","type":"property"},{"title":"Remarks","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/remarks","title":"var remarks: Array<String>","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commremarks","title":"var commRemarks: Array<String>","type":"property"},{"title":"Associated types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/fs21hubstation","title":"case FS21HubStation","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/fs21radioservicearea","title":"case FS21RadioServiceArea","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/fss","title":"case FSS","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/airgroundfacility","title":"case airGroundFacility","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/baseops","title":"case baseOps","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/combinedstationtower","title":"case combinedStationTower","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/internationalfss","title":"case internationalFSS","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/fss\/fsstype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/fss\/fsstype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/fss\/fsstype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/fss\/fsstype","title":"FSS.FSSType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/receiveonly","title":"case receiveOnly","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/transmitonly","title":"case transmitOnly","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/transmitreceive","title":"case transmitReceive","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/fss\/frequency\/use\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/fss\/frequency\/use","title":"FSS.Frequency.Use","type":"enum"}],"path":"\/documentation\/swiftnasr\/fss\/frequency","title":"FSS.Frequency","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/identification","title":"let identification: String","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/type","title":"let type: FSS.Outlet.OutletType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/rco","title":"case RCO","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/rco1","title":"case RCO1","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/fss\/outlet\/outlettype","title":"FSS.Outlet.OutletType","type":"enum"}],"path":"\/documentation\/swiftnasr\/fss\/outlet","title":"FSS.Outlet","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/navaid\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/navaid\/identification","title":"let identification: String","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/navaid\/type","title":"let type: NavaidFacilityType","type":"property"}],"path":"\/documentation\/swiftnasr\/fss\/navaid","title":"FSS.Navaid","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/volmet\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/volmet\/frequency","title":"let frequency: FSS.Frequency","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/volmet\/schedule","title":"let schedule: String","type":"property"}],"path":"\/documentation\/swiftnasr\/fss\/volmet","title":"FSS.VOLMET","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/city","title":"let city: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/frequency","title":"let frequency: FSS.Frequency","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/location","title":"let location: Location?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/lowaltenroutechart","title":"let lowAltEnrouteChart: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/navaid","title":"let navaid: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/navaidtype","title":"let navaidType: NavaidFacilityType?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/operationalhours","title":"let operationalHours: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/operator","title":"let `operator`: FSS.Operator?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/operatorname","title":"let operatorName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/owner","title":"let owner: FSS.Operator?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/ownername","title":"let ownerName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/state","title":"var state: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/statename","title":"let stateName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/status","title":"let status: FSS.Status?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/statusdate","title":"let statusDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/commfacility\/timezone","title":"let timezone: String?","type":"property"}],"path":"\/documentation\/swiftnasr\/fss\/commfacility","title":"FSS.CommFacility","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/directionfindingequipment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/directionfindingequipment\/location","title":"let location: Location","type":"property"},{"path":"\/documentation\/swiftnasr\/fss\/directionfindingequipment\/type","title":"let type: String","type":"property"}],"path":"\/documentation\/swiftnasr\/fss\/directionfindingequipment","title":"FSS.DirectionFindingEquipment","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/faa","title":"case FAA","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/rcaf","title":"case RCAF","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/tc","title":"case TC","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/usaf","title":"case USAF","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/usarmy","title":"case USArmy","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/uscg","title":"case USCG","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/usn","title":"case USN","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/foreignfederalgovernment","title":"case foreignFederalGovernment","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/other","title":"case other","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/private","title":"case `private`","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/fss\/operator-swift.enum","title":"FSS.Operator","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/decomissioningdelayed","title":"case decomissioningDelayed","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/operationalifr","title":"case operationalIFR","type":"case"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/operationalparttime","title":"case operationalPartTime","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/fss\/status-swift.enum","title":"FSS.Status","type":"enum"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/==(_:_:)","title":"static func == (FSS, FSS) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/fss\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/fss\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/fss","title":"FSS","type":"class"},{"children":[{"title":"Identification","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/id","title":"var ID: String","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/type","title":"let type: Navaid.FacilityType","type":"property"},{"title":"Location","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/city","title":"let city: String","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/state","title":"var state: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/statename","title":"let stateName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/faaregion","title":"let FAARegion: String","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/country","title":"let country: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/position","title":"let position: Location","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.property","title":"let surveyAccuracy: Navaid.SurveyAccuracy?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/controllingfss","title":"var controllingFSS: FSS?","type":"property"},{"title":"Operator","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/ownername","title":"let ownerName: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/operatorname","title":"let operatorName: String?","type":"property"},{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/commonsystemusage","title":"let commonSystemUsage: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/publicuse","title":"let publicUse: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/hoursofoperation","title":"let hoursOfOperation: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/magneticvariation","title":"let magneticVariation: Int?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/magneticvariationepoch","title":"let magneticVariationEpoch: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.property","title":"let monitoringCategory: Navaid.MonitoringCategory?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/notamaccountabilitycode","title":"let NOTAMAccountabilityCode: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.property","title":"let status: Navaid.Status","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/remarks","title":"var remarks: [String]","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/associatedfixnames","title":"var associatedFixNames: Set<String>","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/isoperational","title":"var isOperational: Bool","type":"property"},{"title":"Radio","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/simultaneousvoice","title":"let simultaneousVoice: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/poweroutput","title":"let powerOutput: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/automaticvoiceid","title":"let automaticVoiceID: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/radiovoicecall","title":"let radioVoiceCall: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/frequency","title":"let frequency: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/beaconidentifier","title":"let beaconIdentifier: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/hiwasflag","title":"let HIWASFlag: Bool?","type":"property"},{"title":"VOR\/DME","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/vorservicevolume","title":"let VORServiceVolume: Navaid.ServiceVolume?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/dmeservicevolume","title":"let DMEServiceVolume: Navaid.ServiceVolume?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/checkpoints","title":"var checkpoints: [VORCheckpoint]","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/isvor","title":"var isVOR: Bool","type":"property"},{"title":"TACAN","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.property","title":"let TACANChannel: Navaid.TACANChannel?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanposition","title":"let TACANPosition: Location?","type":"property"},{"title":"Marker Beacon","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.property","title":"let fanMarkerType: Navaid.FanMarkerType?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkermajorbearing","title":"let fanMarkerMajorBearing: UInt?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/zmarkeravailable","title":"let ZMarkerAvailable: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkers","title":"var fanMarkers: Set<String>","type":"property"},{"title":"TWEB","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/twebhours","title":"let TWEBHours: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/twebphone","title":"let TWEBPhone: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/twebrestrictionflag","title":"let TWEBRestrictionFlag: Bool?","type":"property"},{"title":"NDB","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/isndb","title":"var isNDB: Bool","type":"property"},{"title":"Low-frequency range","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/lfrlegs","title":"let LFRLegs: Array<LFRLeg>?","type":"property"},{"title":"Airspace usage","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.property","title":"let navaidClass: Navaid.NavaidClass?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/pitchflag","title":"let pitchFlag: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/catchflag","title":"let catchFlag: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/suaflag","title":"let SUAFlag: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/restrictionflag","title":"let restrictionFlag: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/lowaltitudeartcc","title":"var lowAltitudeARTCC: ARTCC?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/highaltitudeartcc","title":"var highAltitudeARTCC: ARTCC?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/lowaltitudeinhighstructure","title":"let lowAltitudeInHighStructure: Bool?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/associatedholdingpatterns","title":"var associatedHoldingPatterns: Set<HoldingPatternID>","type":"property"},{"title":"Associated types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/dme","title":"case DME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/ndb","title":"case NDB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/ndbdme","title":"case NDBDME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/tacan","title":"case TACAN","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/uhfndb","title":"case UHFNDB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/vor","title":"case VOR","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/vordme","title":"case VORDME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/vortac","title":"case VORTAC","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/vot","title":"case VOT","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/consolan","title":"case consolan","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/fanmarker","title":"case fanMarker","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/marinendb","title":"case marineNDB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/marinendbdme","title":"case marineNDBDME","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/facilitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/facilitytype","title":"Navaid.FacilityType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitude","title":"var altitude: Navaid.NavaidClass.AltitudeCode?","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/codes","title":"var codes: Set<Navaid.NavaidClass.ClassCode>","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/terminal","title":"case terminal","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/altitudecode","title":"Navaid.NavaidClass.AltitudeCode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/atis","title":"case ATIS","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/dme","title":"case DME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/dmeyankeeband","title":"case DMEYankeeBand","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/fm","title":"case FM","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/fsstransmitonly","title":"case FSSTransmitOnly","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/ndbhighpower","title":"case NDBHighPower","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/ndblowpower","title":"case NDBLowPower","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/ndbmediumpower","title":"case NDBMediumPower","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/ndbnonifrwithtweb","title":"case NDBNonIFRWithTWEB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/ndbwithtweb","title":"case NDBWithTWEB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/parbackup","title":"case PARBackup","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/tacan","title":"case TACAN","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/tweb","title":"case TWEB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/vhfstationmarker","title":"case VHFStationMarker","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/vor","title":"case VOR","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/vortac","title":"case VORTAC","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/vot","title":"case VOT","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/automaticweatherbroadcast","title":"case automaticWeatherBroadcast","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/localizermiddlemarker","title":"case localizerMiddleMarker","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/localizeroutermarker","title":"case localizerOuterMarker","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/novoice","title":"case noVoice","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/scheduledweatherbroadcast","title":"case scheduledWeatherBroadcast","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/simultaneousrangehomingsignal","title":"case simultaneousRangeHomingSignal","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct\/classcode","title":"Navaid.NavaidClass.ClassCode","type":"enum"}],"path":"\/documentation\/swiftnasr\/navaid\/navaidclass-swift.struct","title":"Navaid.NavaidClass","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/low","title":"case low","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/navaidhigh","title":"case navaidHigh","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/navaidlow","title":"case navaidLow","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/terminal","title":"case terminal","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/servicevolume\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/servicevolume","title":"Navaid.ServiceVolume","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.enum\/nos","title":"case NOS","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.enum\/seconds(_:)","title":"case seconds(UInt)","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.enum\/thirdordertriangulation","title":"case thirdOrderTriangulation","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.enum\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/swiftnasr\/navaid\/surveyaccuracy-swift.enum","title":"Navaid.SurveyAccuracy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/internalmonitoringonly","title":"case internalMonitoringOnly","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/statusinoppilotreportsok","title":"case statusInopPilotReportsOK","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/statusok","title":"case statusOK","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/statusonly","title":"case statusOnly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/monitoringcategory-swift.enum","title":"Navaid.MonitoringCategory","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.property","title":"let band: Navaid.TACANChannel.Band","type":"property"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/channel","title":"let channel: UInt8","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/x","title":"case X","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/y","title":"case Y","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct\/band-swift.enum","title":"Navaid.TACANChannel.Band","type":"enum"}],"path":"\/documentation\/swiftnasr\/navaid\/tacanchannel-swift.struct","title":"Navaid.TACANChannel","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/bone","title":"case bone","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/elliptical","title":"case elliptical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/fanmarkertype-swift.enum","title":"Navaid.FanMarkerType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/decommissioned","title":"case decommissioned","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/operationalifr","title":"case operationalIFR","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/operationalrestricted","title":"case operationalRestricted","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/operationalvfr","title":"case operationalVFR","type":"case"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/shutdown","title":"case shutdown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid\/status-swift.enum","title":"Navaid.Status","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/airdescription","title":"let airDescription: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/airport","title":"var airport: Airport?","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/altitude","title":"let altitude: Int?","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/bearing","title":"let bearing: UInt","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/grounddescription","title":"let groundDescription: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/state","title":"var state: State?","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/type","title":"let type: VORCheckpoint.CheckpointType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/airport(data:)","title":"func airport(data: NASRData) -> Airport?","type":"method"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/air","title":"case air","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/ground","title":"case ground","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/ground1","title":"case ground1","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/checkpointtype","title":"VORCheckpoint.CheckpointType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/airdescription","title":"case airDescription","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/airportid","title":"case airportID","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/altitude","title":"case altitude","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/bearing","title":"case bearing","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/grounddescription","title":"case groundDescription","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/statecode","title":"case stateCode","type":"case"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint\/codingkeys","title":"VORCheckpoint.CodingKeys","type":"enum"}],"path":"\/documentation\/swiftnasr\/vorcheckpoint","title":"VORCheckpoint","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/holdingpatternid\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/holdingpatternid\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftnasr\/holdingpatternid\/number","title":"let number: UInt","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/holdingpatternid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/holdingpatternid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/holdingpatternid","title":"HoldingPatternID","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/bearing","title":"let bearing: UInt","type":"property"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.property","title":"let quadrant: LFRLeg.Quadrant","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/a","title":"case A","type":"case"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/n","title":"case N","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/lfrleg\/quadrant-swift.enum","title":"LFRLeg.Quadrant","type":"enum"}],"path":"\/documentation\/swiftnasr\/lfrleg","title":"LFRLeg","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/dme","title":"case DME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/lfr","title":"case LFR","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/ndb","title":"case NDB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/ndb_dme","title":"case NDB_DME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/tacan","title":"case TACAN","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/uhf_ndb","title":"case UHF_NDB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/vor","title":"case VOR","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/vordme","title":"case VORDME","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/vortac","title":"case VORTAC","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/vot","title":"case VOT","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/fanmarker","title":"case fanMarker","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/marinendb","title":"case marineNDB","type":"case"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/marinendb_dme","title":"case marineNDB_DME","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/navaidfacilitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaidfacilitytype","title":"NavaidFacilityType","type":"enum"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/==(_:_:)","title":"static func == (Navaid, Navaid) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/navaid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/navaid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/navaid","title":"Navaid","type":"class"},{"title":"Distributions","type":"groupMarker"},{"children":[{"title":"Downloading distributions from the Internet","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/frominternettomemory(activeat:)","title":"class func fromInternetToMemory(activeAt: Date?) -> NASR?","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/init(data:)","title":"init?(data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/data","title":"let data: Data","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivedatadistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/archivedatadistribution","title":"ArchiveDataDistribution","type":"class"},{"path":"\/documentation\/swiftnasr\/nasr\/frominternettofile(_:activeat:)","title":"class func fromInternetToFile(URL?, activeAt: Date?) -> NASR?","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/init(location:)","title":"init?(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/location","title":"let location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivefiledistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/archivefiledistribution","title":"ArchiveFileDistribution","type":"class"},{"title":"Loading distributions from disk","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/fromlocalarchive(_:)","title":"class func fromLocalArchive(URL) -> NASR","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/init(location:)","title":"init?(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/location","title":"let location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivefiledistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/archivefiledistribution","title":"ArchiveFileDistribution","type":"class"},{"path":"\/documentation\/swiftnasr\/nasr\/fromlocaldirectory(_:)","title":"class func fromLocalDirectory(URL) -> NASR","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/init(location:)","title":"init(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/location","title":"let location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/directorydistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/directorydistribution","title":"DirectoryDistribution","type":"class"},{"title":"Loading previously-parsed data","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/fromdata(_:)","title":"class func fromData(NASRData) -> NASR","type":"method"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readcycle()","title":"func readCycle() throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readcyclepublisher()","title":"func readCyclePublisher() -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readfile(path:withprogress:eachline:)","title":"func readFile(path: String, withProgress: (Progress) -> Void, eachLine: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readfile(path:withprogress:returninglines:)","title":"func readFile(path: String, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readfilepublisher(path:withprogress:returninglines:)","title":"func readFilePublisher(path: String, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/nulldistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/nulldistribution","title":"NullDistribution","type":"class"},{"title":"Creating your own Distribution subclass","type":"groupMarker"},{"children":[{"title":"Subclasses","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/init(data:)","title":"init?(data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/data","title":"let data: Data","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivedatadistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/archivedatadistribution","title":"ArchiveDataDistribution","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/init(location:)","title":"init?(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/location","title":"let location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivefiledistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/archivefiledistribution","title":"ArchiveFileDistribution","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/init(location:)","title":"init(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/location","title":"let location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/directorydistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/directorydistribution","title":"DirectoryDistribution","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readcycle()","title":"func readCycle() throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readcyclepublisher()","title":"func readCyclePublisher() -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readfile(path:withprogress:eachline:)","title":"func readFile(path: String, withProgress: (Progress) -> Void, eachLine: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readfile(path:withprogress:returninglines:)","title":"func readFile(path: String, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readfilepublisher(path:withprogress:returninglines:)","title":"func readFilePublisher(path: String, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/nulldistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/nulldistribution","title":"NullDistribution","type":"class"},{"title":"Locating a file wthin a distribution","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/distribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Reading the contents of a file","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/distribution\/readfile(path:withprogress:eachline:)","title":"func readFile(path: String, withProgress: (Progress) -> Void, eachLine: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/distribution\/readfilepublisher(path:withprogress:returninglines:)","title":"func readFilePublisher(path: String, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/distribution\/readfile(path:withprogress:returninglines:)","title":"func readFile(path: String, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"title":"Reading records","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/recordtype\/artccboundarysegments","title":"case ARTCCBoundarySegments","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/artccfacilities","title":"case ARTCCFacilities","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/atsairways","title":"case ATSAirways","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/fsscommfacilities","title":"case FSSCommFacilities","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/harfixes","title":"case HARFixes","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/ilses","title":"case ILSes","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/airports","title":"case airports","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/airways","title":"case airways","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/codeddepartureroutes","title":"case codedDepartureRoutes","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/departurearrivalprocedures","title":"case departureArrivalProcedures","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/departurearrivalprocedurescomplete","title":"case departureArrivalProceduresComplete","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/enroutefixes","title":"case enrouteFixes","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/flightservicestations","title":"case flightServiceStations","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/holds","title":"case holds","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/locationidentifiers","title":"case locationIdentifiers","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/militarytrainingroutes","title":"case militaryTrainingRoutes","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/miscactivityareas","title":"case miscActivityAreas","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/navaids","title":"case navaids","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/parachutejumpareas","title":"case parachuteJumpAreas","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/preferredroutes","title":"case preferredRoutes","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/reportingpoints","title":"case reportingPoints","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/states","title":"case states","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/terminalcommfacilities","title":"case terminalCommFacilities","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/weatherreportinglocations","title":"case weatherReportingLocations","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/weatherreportingstations","title":"case weatherReportingStations","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/recordtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/recordtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/recordtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/recordtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/recordtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/recordtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/recordtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/recordtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/recordtype","title":"RecordType","type":"enum"},{"path":"\/documentation\/swiftnasr\/distribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/distribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/distribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"title":"Reading the distribution’s cycle","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/distribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/distribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/distribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"}],"path":"\/documentation\/swiftnasr\/distribution","title":"Distribution","type":"protocol"}],"path":"\/documentation\/swiftnasr\/distributions","title":"Working with Distributions","type":"symbol"},{"children":[{"title":"Subclasses","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/init(data:)","title":"init?(data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/data","title":"let data: Data","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivedatadistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/archivedatadistribution","title":"ArchiveDataDistribution","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/init(location:)","title":"init?(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/location","title":"let location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivefiledistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/archivefiledistribution","title":"ArchiveFileDistribution","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/init(location:)","title":"init(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/location","title":"let location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/directorydistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/directorydistribution","title":"DirectoryDistribution","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readcycle()","title":"func readCycle() throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readcyclepublisher()","title":"func readCyclePublisher() -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readfile(path:withprogress:eachline:)","title":"func readFile(path: String, withProgress: (Progress) -> Void, eachLine: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readfile(path:withprogress:returninglines:)","title":"func readFile(path: String, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readfilepublisher(path:withprogress:returninglines:)","title":"func readFilePublisher(path: String, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/nulldistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/nulldistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/nulldistribution","title":"NullDistribution","type":"class"},{"title":"Locating a file wthin a distribution","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/distribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Reading the contents of a file","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/distribution\/readfile(path:withprogress:eachline:)","title":"func readFile(path: String, withProgress: (Progress) -> Void, eachLine: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/distribution\/readfilepublisher(path:withprogress:returninglines:)","title":"func readFilePublisher(path: String, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/distribution\/readfile(path:withprogress:returninglines:)","title":"func readFile(path: String, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"title":"Reading records","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/recordtype\/artccboundarysegments","title":"case ARTCCBoundarySegments","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/artccfacilities","title":"case ARTCCFacilities","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/atsairways","title":"case ATSAirways","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/fsscommfacilities","title":"case FSSCommFacilities","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/harfixes","title":"case HARFixes","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/ilses","title":"case ILSes","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/airports","title":"case airports","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/airways","title":"case airways","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/codeddepartureroutes","title":"case codedDepartureRoutes","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/departurearrivalprocedures","title":"case departureArrivalProcedures","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/departurearrivalprocedurescomplete","title":"case departureArrivalProceduresComplete","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/enroutefixes","title":"case enrouteFixes","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/flightservicestations","title":"case flightServiceStations","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/holds","title":"case holds","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/locationidentifiers","title":"case locationIdentifiers","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/militarytrainingroutes","title":"case militaryTrainingRoutes","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/miscactivityareas","title":"case miscActivityAreas","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/navaids","title":"case navaids","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/parachutejumpareas","title":"case parachuteJumpAreas","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/preferredroutes","title":"case preferredRoutes","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/reportingpoints","title":"case reportingPoints","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/states","title":"case states","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/terminalcommfacilities","title":"case terminalCommFacilities","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/weatherreportinglocations","title":"case weatherReportingLocations","type":"case"},{"path":"\/documentation\/swiftnasr\/recordtype\/weatherreportingstations","title":"case weatherReportingStations","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/recordtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/recordtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnasr\/recordtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/recordtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/recordtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/recordtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/recordtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnasr\/recordtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/recordtype","title":"RecordType","type":"enum"},{"path":"\/documentation\/swiftnasr\/distribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/distribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/distribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"title":"Reading the distribution’s cycle","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/distribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/distribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/distribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"}],"path":"\/documentation\/swiftnasr\/distribution","title":"Distribution","type":"protocol"},{"title":"Loaders","type":"groupMarker"},{"children":[{"title":"Downloading distributions from the Internet","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/frominternettomemory(activeat:)","title":"class func fromInternetToMemory(activeAt: Date?) -> NASR?","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/init(data:)","title":"init?(data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/data","title":"let data: Data","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivedatadistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/archivedatadistribution","title":"ArchiveDataDistribution","type":"class"},{"path":"\/documentation\/swiftnasr\/nasr\/frominternettofile(_:activeat:)","title":"class func fromInternetToFile(URL?, activeAt: Date?) -> NASR?","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/init(location:)","title":"init?(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/location","title":"let location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivefiledistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/archivefiledistribution","title":"ArchiveFileDistribution","type":"class"},{"title":"Loading distributions from disk","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nasr\/fromlocalarchive(_:)","title":"class func fromLocalArchive(URL) -> NASR","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/init(location:)","title":"init?(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/location","title":"let location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivefiledistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/archivefiledistribution","title":"ArchiveFileDistribution","type":"class"},{"path":"\/documentation\/swiftnasr\/nasr\/fromlocaldirectory(_:)","title":"class func fromLocalDirectory(URL) -> NASR","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/init(location:)","title":"init(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/location","title":"let location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/findfile(prefix:)","title":"func findFile(prefix: String) throws -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/read(type:withprogress:eachrecord:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, eachRecord: (Data) -> Void) throws -> UInt","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/read(type:withprogress:returninglines:)","title":"func read(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readcycle()","title":"func readCycle() async throws -> Cycle?","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readcycle(callback:)","title":"func readCycle(callback: (Cycle?) -> Void) throws","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readcyclepublisher()","title":"func readCyclePublisher() throws -> AnyPublisher<Cycle?, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/directorydistribution\/readpublisher(type:withprogress:returninglines:)","title":"func readPublisher(type: RecordType, withProgress: (Progress) -> Void, returningLines: (UInt) -> Void) -> AnyPublisher<Data, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/directorydistribution\/distribution-implementations","title":"Distribution Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/directorydistribution","title":"DirectoryDistribution","type":"class"},{"title":"Creating your own Loader subclass","type":"groupMarker"},{"children":[{"title":"Subclasses","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archiveloader\/init(location:)","title":"init(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archiveloader\/location","title":"var location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archiveloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/archiveloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/archiveloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archiveloader","title":"ArchiveLoader","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directoryloader\/init(location:)","title":"init(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directoryloader\/location","title":"var location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directoryloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/directoryloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/directoryloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/directoryloader","title":"DirectoryLoader","type":"class"},{"children":[{"title":"Subclasses","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/session","title":"var session: URLSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivedatadownloader","title":"ArchiveDataDownloader","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/init(cycle:location:)","title":"init(cycle: Cycle?, location: URL?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/location","title":"var location: URL?","type":"property"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/session","title":"var session: URLSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivefiledownloader","title":"ArchiveFileDownloader","type":"class"},{"title":"Creating downloaders","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/downloader\/init(cycle:)","title":"init(cycle: Cycle?)","type":"init"},{"title":"Cycles","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/downloader\/cycle","title":"let cycle: Cycle","type":"property"},{"path":"\/documentation\/swiftnasr\/downloader\/cycleurl","title":"var cycleURL: URL","type":"property"},{"title":"Downloading distributions","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/downloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/downloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/downloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"}],"path":"\/documentation\/swiftnasr\/downloader","title":"Downloader","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nullloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/nullloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/nullloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/nullloader","title":"NullLoader","type":"class"},{"title":"Loading data","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/loader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/loader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/loader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"}],"path":"\/documentation\/swiftnasr\/loader","title":"Loader","type":"protocol"},{"children":[{"title":"Subclasses","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/session","title":"var session: URLSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivedatadownloader","title":"ArchiveDataDownloader","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/init(cycle:location:)","title":"init(cycle: Cycle?, location: URL?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/location","title":"var location: URL?","type":"property"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/session","title":"var session: URLSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivefiledownloader","title":"ArchiveFileDownloader","type":"class"},{"title":"Creating downloaders","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/downloader\/init(cycle:)","title":"init(cycle: Cycle?)","type":"init"},{"title":"Cycles","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/downloader\/cycle","title":"let cycle: Cycle","type":"property"},{"path":"\/documentation\/swiftnasr\/downloader\/cycleurl","title":"var cycleURL: URL","type":"property"},{"title":"Downloading distributions","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/downloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/downloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/downloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"}],"path":"\/documentation\/swiftnasr\/downloader","title":"Downloader","type":"class"}],"path":"\/documentation\/swiftnasr\/loaders","title":"Working with Loaders","type":"symbol"},{"children":[{"title":"Subclasses","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archiveloader\/init(location:)","title":"init(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archiveloader\/location","title":"var location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archiveloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/archiveloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/archiveloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archiveloader","title":"ArchiveLoader","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directoryloader\/init(location:)","title":"init(location: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directoryloader\/location","title":"var location: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/directoryloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/directoryloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/directoryloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/directoryloader","title":"DirectoryLoader","type":"class"},{"children":[{"title":"Subclasses","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/session","title":"var session: URLSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivedatadownloader","title":"ArchiveDataDownloader","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/init(cycle:location:)","title":"init(cycle: Cycle?, location: URL?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/location","title":"var location: URL?","type":"property"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/session","title":"var session: URLSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivefiledownloader","title":"ArchiveFileDownloader","type":"class"},{"title":"Creating downloaders","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/downloader\/init(cycle:)","title":"init(cycle: Cycle?)","type":"init"},{"title":"Cycles","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/downloader\/cycle","title":"let cycle: Cycle","type":"property"},{"path":"\/documentation\/swiftnasr\/downloader\/cycleurl","title":"var cycleURL: URL","type":"property"},{"title":"Downloading distributions","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/downloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/downloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/downloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"}],"path":"\/documentation\/swiftnasr\/downloader","title":"Downloader","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/nullloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/nullloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/nullloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/nullloader","title":"NullLoader","type":"class"},{"title":"Loading data","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/loader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/loader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/loader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"}],"path":"\/documentation\/swiftnasr\/loader","title":"Loader","type":"protocol"},{"children":[{"title":"Subclasses","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/session","title":"var session: URLSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/archivedatadownloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivedatadownloader","title":"ArchiveDataDownloader","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/init(cycle:location:)","title":"init(cycle: Cycle?, location: URL?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/location","title":"var location: URL?","type":"property"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/session","title":"var session: URLSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/archivefiledownloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"}],"path":"\/documentation\/swiftnasr\/archivefiledownloader","title":"ArchiveFileDownloader","type":"class"},{"title":"Creating downloaders","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/downloader\/init(cycle:)","title":"init(cycle: Cycle?)","type":"init"},{"title":"Cycles","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/downloader\/cycle","title":"let cycle: Cycle","type":"property"},{"path":"\/documentation\/swiftnasr\/downloader\/cycleurl","title":"var cycleURL: URL","type":"property"},{"title":"Downloading distributions","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/downloader\/load(withprogress:callback:)","title":"func load(withProgress: (Progress) -> Void, callback: (Result<Distribution, Error>) -> Void)","type":"method"},{"path":"\/documentation\/swiftnasr\/downloader\/loadpublisher(withprogress:)","title":"func loadPublisher(withProgress: (Progress) -> Void) -> AnyPublisher<Distribution, Error>","type":"method"},{"path":"\/documentation\/swiftnasr\/downloader\/load(withprogress:)","title":"func load(withProgress: (Progress) -> Void) async throws -> Distribution","type":"method"}],"path":"\/documentation\/swiftnasr\/downloader","title":"Downloader","type":"class"},{"title":"ZIP file coders","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/jsonzipencoder\/encode(_:)","title":"func encode<T>(T) throws -> Data","type":"method"}],"path":"\/documentation\/swiftnasr\/jsonzipencoder","title":"JSONZipEncoder","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/jsonzipdecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: Data) throws -> T","type":"method"}],"path":"\/documentation\/swiftnasr\/jsonzipdecoder","title":"JSONZipDecoder","type":"class"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/cycle\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/swiftnasr\/cycle\/init(year:month:day:)","title":"init(year: UInt, month: UInt8, day: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/cycle\/date","title":"var date: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/cycle\/datecomponents","title":"var dateComponents: DateComponents","type":"property"},{"path":"\/documentation\/swiftnasr\/cycle\/daterange","title":"var dateRange: DateInterval?","type":"property"},{"path":"\/documentation\/swiftnasr\/cycle\/day","title":"let day: UInt8","type":"property"},{"path":"\/documentation\/swiftnasr\/cycle\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/swiftnasr\/cycle\/enddate","title":"var endDate: Date?","type":"property"},{"path":"\/documentation\/swiftnasr\/cycle\/iseffective","title":"var isEffective: Bool","type":"property"},{"path":"\/documentation\/swiftnasr\/cycle\/month","title":"let month: UInt8","type":"property"},{"path":"\/documentation\/swiftnasr\/cycle\/year","title":"let year: UInt","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/cycle\/contains(_:)","title":"func contains(Date) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/cycle\/current","title":"static var current: Cycle","type":"property"},{"path":"\/documentation\/swiftnasr\/cycle\/cycleduration","title":"static let cycleDuration: DateComponents","type":"property"},{"path":"\/documentation\/swiftnasr\/cycle\/datum","title":"static let datum: Cycle","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/cycle\/effectivecycle(for:)","title":"static func effectiveCycle(for: Date) -> Cycle?","type":"method"}],"path":"\/documentation\/swiftnasr\/cycle","title":"Cycle","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/error\/baddata","title":"case badData","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/badresponse(_:)","title":"case badResponse(URLResponse)","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/invalidfrequency(_:)","title":"case invalidFrequency(String)","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/invalidpavementclassification(_:)","title":"case invalidPavementClassification(String)","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/invalidrunwaysurface(_:)","title":"case invalidRunwaySurface(String)","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/invalidvgsi(_:)","title":"case invalidVGSI(String)","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/nodata","title":"case noData","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/nofile","title":"case noFile","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/nosuchfile(path:)","title":"case noSuchFile(path: String)","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/nosuchfileprefix(_:)","title":"case noSuchFilePrefix(String)","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/notyetloaded","title":"case notYetLoaded","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/nulldistribution","title":"case nullDistribution","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/unknownartcc(_:)","title":"case unknownARTCC(String)","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/unknownartccfrequency(_:artcc:)","title":"case unknownARTCCFrequency(UInt, ARTCC: ARTCC)","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/unknownfss(_:)","title":"case unknownFSS(String)","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/unknownfieldid(_:artcc:)","title":"case unknownFieldID(String, ARTCC: ARTCC)","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/unknownfrequencyfieldid(_:frequency:artcc:)","title":"case unknownFrequencyFieldID(String, frequency: ARTCC.CommFrequency, ARTCC: ARTCC)","type":"case"},{"path":"\/documentation\/swiftnasr\/error\/unknownnavaid(_:)","title":"case unknownNavaid(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/error\/errordescription-6btzp","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/swiftnasr\/error\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnasr\/error\/errordescription-o4xk","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/error\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/error\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/swiftnasr\/error\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/swiftnasr\/error\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/swiftnasr\/error","title":"Error","type":"enum"}],"path":"\/documentation\/swiftnasr","title":"SwiftNASR","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}